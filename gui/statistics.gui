default_popup = {
    name = "statistics"
    visible = "[GetVariableSystem.Exists('statistics_open'))]"
    parentanchor = center
	movable = yes
	layer = popups
	allow_outside = yes
    max_update_rate = 10

    blockoverride "header" {
			widget = {
				size = { 100% 82 }
                visible = "[GetVariableSystem.Exists('statistics_gdp')]"
				popup_top_header = {}

				textbox = {
					position = { 0 24 }
					size = { 75% 40 }
					text = "[JoinText(' ', Localize('gdp_tt'), Localize('statistics_header'))]"
					elide = right
					
					parentanchor = hcenter
					align = hcenter|nobaseline
					using = header_font
					using = header_font_size
					default_format = "#header"
				}

				block "second_line" {}
			}
            widget = {
				size = { 100% 82 }
                visible = "[GetVariableSystem.Exists('statistics_population')]"
				popup_top_header = {}

				textbox = {
					position = { 0 24 }
					size = { 75% 40 }
					text = "[JoinText(' ', Localize('population_tt'), Localize('statistics_header'))]"
					elide = right
					
					parentanchor = hcenter
					align = hcenter|nobaseline
					using = header_font
					using = header_font_size
					default_format = "#header"
				}

				block "second_line" {}
			}
            widget = {
				size = { 100% 82 }
                visible = "[GetVariableSystem.Exists('statistics_num_states')]"
				popup_top_header = {}

				textbox = {
					position = { 0 24 }
					size = { 75% 40 }
					text = "[JoinText(' ', Localize('state_num'), Localize('statistics_header'))]"
					elide = right
					
					parentanchor = hcenter
					align = hcenter|nobaseline
					using = header_font
					using = header_font_size
					default_format = "#header"
				}

				block "second_line" {}
			}
            widget = {
				size = { 100% 82 }
                visible = "[GetVariableSystem.Exists('statistics_gdp_share')]"
				popup_top_header = {}

				textbox = {
					position = { 0 24 }
					size = { 75% 40 }
					text = "[JoinText(' ', Localize('gdp_share'), Localize('statistics_header'))]"
					elide = right
					
					parentanchor = hcenter
					align = hcenter|nobaseline
					using = header_font
					using = header_font_size
					default_format = "#header"
				}

				block "second_line" {}
			}
            widget = {
				size = { 100% 82 }
                visible = "[GetVariableSystem.Exists('statistics_literacy_rate')]"
				popup_top_header = {}

				textbox = {
					position = { 0 24 }
					size = { 75% 40 }
					text = "[JoinText(' ', Localize('literacy_rate_tt'), Localize('statistics_header'))]"
					elide = right
					
					parentanchor = hcenter
					align = hcenter|nobaseline
					using = header_font
					using = header_font_size
					default_format = "#header"
				}

				block "second_line" {}
			}
            widget = {
				size = { 100% 82 }
                visible = "[GetVariableSystem.Exists('statistics_prestige')]"
				popup_top_header = {}

				textbox = {
					position = { 0 24 }
					size = { 75% 40 }
					text = "[JoinText(' ', Localize('prestige_tt'), Localize('statistics_header'))]"
					elide = right
					
					parentanchor = hcenter
					align = hcenter|nobaseline
					using = header_font
					using = header_font_size
					default_format = "#header"
				}

				block "second_line" {}
			}
            widget = {
				size = { 100% 82 }
                visible = "[GetVariableSystem.Exists('statistics_army_size')]"
				popup_top_header = {}

				textbox = {
					position = { 0 24 }
					size = { 75% 40 }
					text = "[JoinText(' ', Localize('army_size_tt'), Localize('statistics_header'))]"
					elide = right
					
					parentanchor = hcenter
					align = hcenter|nobaseline
					using = header_font
					using = header_font_size
					default_format = "#header"
				}

				block "second_line" {}
			}
            widget = {
				size = { 100% 82 }
                visible = "[GetVariableSystem.Exists('statistics_navy_size')]"
				popup_top_header = {}

				textbox = {
					position = { 0 24 }
					size = { 75% 40 }
					text = "[JoinText(' ', Localize('navy_size_tt'), Localize('statistics_header'))]"
					elide = right
					
					parentanchor = hcenter
					align = hcenter|nobaseline
					using = header_font
					using = header_font_size
					default_format = "#header"
				}

				block "second_line" {}
			}
            widget = {
				size = { 100% 82 }
                visible = "[GetVariableSystem.Exists('statistics_military_expenses')]"
				popup_top_header = {}

				textbox = {
					position = { 0 24 }
					size = { 75% 40 }
					text = "[JoinText(' ', Localize('military_expenses'), Localize('statistics_header'))]"
					elide = right
					
					parentanchor = hcenter
					align = hcenter|nobaseline
					using = header_font
					using = header_font_size
					default_format = "#header"
				}

				block "second_line" {}
			}
            widget = {
				size = { 100% 82 }
                visible = "[GetVariableSystem.Exists('statistics_techs_researched')]"
				popup_top_header = {}

				textbox = {
					position = { 0 24 }
					size = { 75% 40 }
					text = "[JoinText(' ', Localize('techs_researched'), Localize('statistics_header'))]"
					elide = right
					
					parentanchor = hcenter
					align = hcenter|nobaseline
					using = header_font
					using = header_font_size
					default_format = "#header"
				}

				block "second_line" {}
			}
            widget = {
				size = { 100% 82 }
                visible = "[GetVariableSystem.Exists('statistics_income')]"
				popup_top_header = {}

				textbox = {
					position = { 0 24 }
					size = { 75% 40 }
					text = "[JoinText(' ', Localize('income_tt'), Localize('statistics_header'))]"
					elide = right
					
					parentanchor = hcenter
					align = hcenter|nobaseline
					using = header_font
					using = header_font_size
					default_format = "#header"
				}

				block "second_line" {}
			}
            widget = {
				size = { 100% 82 }
                visible = "[GetVariableSystem.Exists('statistics_investment_pool')]"
				popup_top_header = {}

				textbox = {
					position = { 0 24 }
					size = { 75% 40 }
					text = "[JoinText(' ', Localize('investment_pool_tt'), Localize('statistics_header'))]"
					elide = right
					
					parentanchor = hcenter
					align = hcenter|nobaseline
					using = header_font
					using = header_font_size
					default_format = "#header"
				}

				block "second_line" {}
			}
            widget = {
				size = { 100% 82 }
                visible = "[GetVariableSystem.Exists('statistics_gold_reserves_limit')]"
				popup_top_header = {}

				textbox = {
					position = { 0 24 }
					size = { 75% 40 }
					text = "[JoinText(' ', Localize('gold_reserves_limit'), Localize('statistics_header'))]"
					elide = right
					
					parentanchor = hcenter
					align = hcenter|nobaseline
					using = header_font
					using = header_font_size
					default_format = "#header"
				}

				block "second_line" {}
			}
            widget = {
				size = { 100% 82 }
                visible = "[GetVariableSystem.Exists('statistics_credit')]"
				popup_top_header = {}

				textbox = {
					position = { 0 24 }
					size = { 75% 40 }
					text = "[JoinText(' ', Localize('credit_tt'), Localize('statistics_header'))]"
					elide = right
					
					parentanchor = hcenter
					align = hcenter|nobaseline
					using = header_font
					using = header_font_size
					default_format = "#header"
				}

				block "second_line" {}
			}
            widget = {
				size = { 100% 82 }
                visible = "[GetVariableSystem.Exists('statistics_building_levels')]"
				popup_top_header = {}

				textbox = {
					position = { 0 24 }
					size = { 75% 40 }
					text = "[JoinText(' ', Localize('building_levels'), Localize('statistics_header'))]"
					elide = right
					
					parentanchor = hcenter
					align = hcenter|nobaseline
					using = header_font
					using = header_font_size
					default_format = "#header"
				}

				block "second_line" {}
			}
            widget = {
				size = { 100% 82 }
                visible = "[GetVariableSystem.Exists('statistics_gdp_per_capita')]"
				popup_top_header = {}

				textbox = {
					position = { 0 24 }
					size = { 75% 40 }
					text = "[JoinText(' ', Localize('gdp_per_capita'), Localize('statistics_header'))]"
					elide = right
					
					parentanchor = hcenter
					align = hcenter|nobaseline
					using = header_font
					using = header_font_size
					default_format = "#header"
				}

				block "second_line" {}
			}
            widget = {
				size = { 100% 82 }
                visible = "[GetVariableSystem.Exists('statistics_incorporated_population')]"
				popup_top_header = {}

				textbox = {
					position = { 0 24 }
					size = { 75% 40 }
					text = "[JoinText(' ', Localize('incorporated_population'), Localize('statistics_header'))]"
					elide = right
					
					parentanchor = hcenter
					align = hcenter|nobaseline
					using = header_font
					using = header_font_size
					default_format = "#header"
				}

				block "second_line" {}
			}
            widget = {
				size = { 100% 82 }
                visible = "[GetVariableSystem.Exists('statistics_total_subject_population')]"
				popup_top_header = {}

				textbox = {
					position = { 0 24 }
					size = { 75% 40 }
					text = "[JoinText(' ', Localize('total_subject_population'), Localize('statistics_header'))]"
					elide = right
					
					parentanchor = hcenter
					align = hcenter|nobaseline
					using = header_font
					using = header_font_size
					default_format = "#header"
				}

				block "second_line" {}
			}
            widget = {
				size = { 100% 82 }
                visible = "[GetVariableSystem.Exists('statistics_population_share')]"
				popup_top_header = {}

				textbox = {
					position = { 0 24 }
					size = { 75% 40 }
					text = "[JoinText(' ', Localize('population_share'), Localize('statistics_header'))]"
					elide = right
					
					parentanchor = hcenter
					align = hcenter|nobaseline
					using = header_font
					using = header_font_size
					default_format = "#header"
				}

				block "second_line" {}
			}
            widget = {
				size = { 100% 82 }
                visible = "[GetVariableSystem.Exists('statistics_sol')]"
				popup_top_header = {}

				textbox = {
					position = { 0 24 }
					size = { 75% 40 }
					text = "[JoinText(' ', Localize('sol_tt'), Localize('statistics_header'))]"
					elide = right
					
					parentanchor = hcenter
					align = hcenter|nobaseline
					using = header_font
					using = header_font_size
					default_format = "#header"
				}

				block "second_line" {}
			}
            widget = {
				size = { 100% 82 }
                visible = "[GetVariableSystem.Exists('statistics_infamy')]"
				popup_top_header = {}

				textbox = {
					position = { 0 24 }
					size = { 75% 40 }
					text = "[JoinText(' ', Localize('infamy_tt'), Localize('statistics_header'))]"
					elide = right
					
					parentanchor = hcenter
					align = hcenter|nobaseline
					using = header_font
					using = header_font_size
					default_format = "#header"
				}

				block "second_line" {}
			}
            widget = {
				size = { 100% 82 }
                visible = "[GetVariableSystem.Exists('statistics_army_power_projection')]"
				popup_top_header = {}

				textbox = {
					position = { 0 24 }
					size = { 75% 40 }
					text = "[JoinText(' ', Localize('army_power_projection'), Localize('statistics_header'))]"
					elide = right
					
					parentanchor = hcenter
					align = hcenter|nobaseline
					using = header_font
					using = header_font_size
					default_format = "#header"
				}

				block "second_line" {}
			}
            widget = {
				size = { 100% 82 }
                visible = "[GetVariableSystem.Exists('statistics_navy_power_projection')]"
				popup_top_header = {}

				textbox = {
					position = { 0 24 }
					size = { 75% 40 }
					text = "[JoinText(' ', Localize('navy_power_projection'), Localize('statistics_header'))]"
					elide = right
					
					parentanchor = hcenter
					align = hcenter|nobaseline
					using = header_font
					using = header_font_size
					default_format = "#header"
				}

				block "second_line" {}
			}
            widget = {
				size = { 100% 82 }
                visible = "[GetVariableSystem.Exists('statistics_military_expenses_share')]"
				popup_top_header = {}

				textbox = {
					position = { 0 24 }
					size = { 75% 40 }
					text = "[JoinText(' ', Localize('military_expenses_share'), Localize('statistics_header'))]"
					elide = right
					
					parentanchor = hcenter
					align = hcenter|nobaseline
					using = header_font
					using = header_font_size
					default_format = "#header"
				}

				block "second_line" {}
			}
            widget = {
				size = { 100% 82 }
                visible = "[GetVariableSystem.Exists('statistics_num_active_interests')]"
				popup_top_header = {}

				textbox = {
					position = { 0 24 }
					size = { 75% 40 }
					text = "[JoinText(' ', Localize('num_active_interests'), Localize('statistics_header'))]"
					elide = right
					
					parentanchor = hcenter
					align = hcenter|nobaseline
					using = header_font
					using = header_font_size
					default_format = "#header"
				}

				block "second_line" {}
			}
            widget = {
				size = { 100% 82 }
                visible = "[GetVariableSystem.Exists('statistics_expenses')]"
				popup_top_header = {}

				textbox = {
					position = { 0 24 }
					size = { 75% 40 }
					text = "[JoinText(' ', Localize('expenses_tt'), Localize('statistics_header'))]"
					elide = right
					
					parentanchor = hcenter
					align = hcenter|nobaseline
					using = header_font
					using = header_font_size
					default_format = "#header"
				}

				block "second_line" {}
			}
            widget = {
				size = { 100% 82 }
                visible = "[GetVariableSystem.Exists('statistics_investment_pool_income')]"
				popup_top_header = {}

				textbox = {
					position = { 0 24 }
					size = { 75% 40 }
					text = "[JoinText(' ', Localize('investment_pool_income'), Localize('statistics_header'))]"
					elide = right
					
					parentanchor = hcenter
					align = hcenter|nobaseline
					using = header_font
					using = header_font_size
					default_format = "#header"
				}

				block "second_line" {}
			}
            widget = {
				size = { 100% 82 }
                visible = "[GetVariableSystem.Exists('statistics_gdp')]"
				popup_top_header = {}

				textbox = {
					position = { 0 24 }
					size = { 75% 40 }
					text = "[JoinText(' ', Localize('gdp_tt'), Localize('statistics_header'))]"
					elide = right
					
					parentanchor = hcenter
					align = hcenter|nobaseline
					using = header_font
					using = header_font_size
					default_format = "#header"
				}

				block "second_line" {}
			}
            widget = {
				size = { 100% 82 }
                visible = "[GetVariableSystem.Exists('statistics_gold_reserves')]"
				popup_top_header = {}

				textbox = {
					position = { 0 24 }
					size = { 75% 40 }
					text = "[JoinText(' ', Localize('gold_reserves'), Localize('statistics_header'))]"
					elide = right
					
					parentanchor = hcenter
					align = hcenter|nobaseline
					using = header_font
					using = header_font_size
					default_format = "#header"
				}

				block "second_line" {}
			}
            widget = {
				size = { 100% 82 }
                visible = "[GetVariableSystem.Exists('statistics_debt')]"
				popup_top_header = {}

				textbox = {
					position = { 0 24 }
					size = { 75% 40 }
					text = "[JoinText(' ', Localize('debt'), Localize('statistics_header'))]"
					elide = right
					
					parentanchor = hcenter
					align = hcenter|nobaseline
					using = header_font
					using = header_font_size
					default_format = "#header"
				}

				block "second_line" {}
			}
            widget = {
				size = { 100% 82 }
                visible = "[GetVariableSystem.Exists('statistics_num_convoys')]"
				popup_top_header = {}

				textbox = {
					position = { 0 24 }
					size = { 75% 40 }
					text = "[JoinText(' ', Localize('num_convoys_available'), Localize('statistics_header'))]"
					elide = right
					
					parentanchor = hcenter
					align = hcenter|nobaseline
					using = header_font
					using = header_font_size
					default_format = "#header"
				}

				block "second_line" {}
			}
		}
    
    blockoverride "header_back_button_visibility" {
        visible = yes
    }

    blockoverride "header_close_button_visibility" {
        visible = yes
    }

    blockoverride "header_close_button" {
        onclick = "[GetVariableSystem.Clear('statistics_open'))]"
    }
    blockoverride "header_back_button" {
        onclick = "[GetVariableSystem.Clear('statistics_open'))]"
    }
    blockoverride "entire_scrollarea" 
	{   
        flowcontainer = {
            direction = horizontal
            widget = { 
                size = { 140 800 }
                flowcontainer = {
                    direction = vertical
                    margin_top = 13
                    spacing = 13
                    button = {
                        fontsize = 13
                        using = default_button_action
                        size = { 135 37 }
                        text = "name_mode"
                        enabled = no
                        tooltip = "unable"
                    }
                    button = {
                        fontsize = 13
                        using = default_button
                        size = { 135 37 }
                        icon = {
                            visible = "[GetVariableSystem.Exists('statistics_gdp')]"
                            using = highlighted_square_selection
                        }

                        text = "gdp_tt"
                        tooltip = "gdp_tooltip"
                        enabled = "[Not(GetVariableSystem.Exists('statistics_gdp'))]"
                        onclick = "[GetVariableSystem.Toggle( 'statistics_gdp' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp_per_capita' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_incorporated_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_states' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_total_subject_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_population_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_literacy_rate' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_sol' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_prestige' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_infamy' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_army_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_army_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_navy_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_navy_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_military_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_military_expenses_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_techs_researched' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_active_interests' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_investment_pool' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_investment_pool_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gold_reserves' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gold_reserves_limit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_credit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_debt' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_building_levels' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_convoys' )]"
                    }
                    button = {
                        fontsize = 13
                        using = default_button
                        size = { 135 37 }
                        text = "population_tt"
                        icon = {
                            visible = "[GetVariableSystem.Exists('statistics_population')]"
                            using = highlighted_square_selection
                        }
                        enabled = "[Not(GetVariableSystem.Exists('statistics_population'))]"
                        onclick = "[GetVariableSystem.Toggle( 'statistics_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp_per_capita' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_incorporated_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_states' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_total_subject_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_population_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_literacy_rate' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_sol' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_prestige' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_infamy' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_army_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_army_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_navy_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_navy_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_military_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_military_expenses_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_techs_researched' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_active_interests' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_investment_pool' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_investment_pool_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gold_reserves' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gold_reserves_limit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_credit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_debt' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_building_levels' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_convoys' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp' )]"
                    }
                    
                    button = {
                        fontsize = 13
                        using = default_button
                        icon = {
                            visible = "[GetVariableSystem.Exists('statistics_num_states')]"
                            using = highlighted_square_selection
                        }
                        size = { 135 37 }
                        text = "state_num"
                        enabled = "[Not(GetVariableSystem.Exists('statistics_num_states'))]"
                        onclick = "[GetVariableSystem.Toggle( 'statistics_num_states' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp_per_capita' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_incorporated_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_total_subject_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_population_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_literacy_rate' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_sol' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_prestige' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_infamy' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_army_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_army_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_navy_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_navy_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_military_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_military_expenses_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_techs_researched' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_active_interests' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_investment_pool' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_investment_pool_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gold_reserves' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gold_reserves_limit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_credit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_debt' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_building_levels' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_convoys' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp' )]"
                    }
                    button = {
                        fontsize = 13
                        using = default_button
                        icon = {
                            visible = "[GetVariableSystem.Exists('statistics_gdp_share')]"
                            using = highlighted_square_selection
                        }
                        size = { 135 37 }
                        text = "gdp_share"
                        enabled = "[Not(GetVariableSystem.Exists('statistics_gdp_share'))]"
                        onclick = "[GetVariableSystem.Toggle( 'statistics_gdp_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp_per_capita' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_incorporated_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_states' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_total_subject_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_population_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_literacy_rate' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_sol' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_prestige' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_infamy' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_army_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_army_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_navy_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_navy_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_military_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_military_expenses_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_techs_researched' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_active_interests' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_investment_pool' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_investment_pool_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gold_reserves' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gold_reserves_limit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_credit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_debt' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_building_levels' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_convoys' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp' )]"
                    }
                    button = {
                        fontsize = 13
                        using = default_button
                        icon = {
                            visible = "[GetVariableSystem.Exists('statistics_literacy_rate')]"
                            using = highlighted_square_selection
                        }
                        size = { 135 37 }
                        text = "literacy_rate_tt"
                        enabled = "[Not(GetVariableSystem.Exists('statistics_literacy_rate'))]"
                        onclick = "[GetVariableSystem.Toggle( 'statistics_literacy_rate' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp_per_capita' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_incorporated_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_states' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_total_subject_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_population_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_sol' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_prestige' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_infamy' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_army_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_army_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_navy_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_navy_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_military_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_military_expenses_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_techs_researched' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_active_interests' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_investment_pool' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_investment_pool_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gold_reserves' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gold_reserves_limit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_credit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_debt' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_building_levels' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_convoys' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp' )]"
                    }
                    button = {
                        fontsize = 13
                        using = default_button
                        icon = {
                            visible = "[GetVariableSystem.Exists('statistics_prestige')]"
                            using = highlighted_square_selection
                        }
                        size = { 135 37 }
                        text = "prestige_tt"
                        enabled = "[Not(GetVariableSystem.Exists('statistics_prestige'))]"
                        onclick = "[GetVariableSystem.Toggle( 'statistics_prestige' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp_per_capita' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_incorporated_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_states' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_total_subject_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_population_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_literacy_rate' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_sol' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_infamy' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_army_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_army_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_navy_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_navy_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_military_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_military_expenses_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_techs_researched' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_active_interests' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_investment_pool' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_investment_pool_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gold_reserves' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gold_reserves_limit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_credit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_debt' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_building_levels' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_convoys' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp' )]"
                    }
                    button = {
                        fontsize = 13
                        using = default_button
                        icon = {
                            visible = "[GetVariableSystem.Exists('statistics_army_size')]"
                            using = highlighted_square_selection
                        }
                        size = { 135 37 }
                        text = "army_size_tt"
                        enabled = "[Not(GetVariableSystem.Exists('statistics_army_size'))]"
                        onclick = "[GetVariableSystem.Toggle( 'statistics_army_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp_per_capita' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_incorporated_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_states' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_total_subject_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_population_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_literacy_rate' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_sol' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_prestige' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_infamy' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_army_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_navy_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_navy_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_military_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_military_expenses_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_techs_researched' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_active_interests' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_investment_pool' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_investment_pool_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gold_reserves' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gold_reserves_limit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_credit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_debt' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_building_levels' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_convoys' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp' )]"
                    }
                    button = {
                        fontsize = 13
                        using = default_button
                        icon = {
                            visible = "[GetVariableSystem.Exists('statistics_navy_size')]"
                            using = highlighted_square_selection
                        }
                        size = { 135 37 }
                        text = "navy_size_tt"
                        enabled = "[Not(GetVariableSystem.Exists('statistics_navy_size'))]"
                        onclick = "[GetVariableSystem.Toggle( 'statistics_navy_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp_per_capita' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_incorporated_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_states' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_total_subject_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_population_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_literacy_rate' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_sol' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_prestige' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_infamy' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_army_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_army_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_navy_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_military_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_military_expenses_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_techs_researched' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_active_interests' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_investment_pool' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_investment_pool_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gold_reserves' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gold_reserves_limit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_credit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_debt' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_building_levels' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_convoys' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp' )]"
                    }
                    button = {
                        fontsize = 13
                        using = default_button
                        icon = {
                            visible = "[GetVariableSystem.Exists('statistics_military_expenses')]"
                            using = highlighted_square_selection
                        }
                        size = { 135 37 }
                        text = "military_expenses"
                        enabled = "[Not(GetVariableSystem.Exists('statistics_military_expenses'))]"
                        onclick = "[GetVariableSystem.Toggle( 'statistics_military_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp_per_capita' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_incorporated_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_states' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_total_subject_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_population_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_literacy_rate' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_sol' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_prestige' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_infamy' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_army_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_army_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_navy_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_navy_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_military_expenses_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_techs_researched' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_active_interests' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_investment_pool' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_investment_pool_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gold_reserves' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gold_reserves_limit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_credit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_debt' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_building_levels' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_convoys' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp' )]"
                    }
                    button = {
                        fontsize = 13
                        using = default_button
                        icon = {
                            visible = "[GetVariableSystem.Exists('statistics_techs_researched')]"
                            using = highlighted_square_selection
                        }
                        size = { 135 37 }
                        text = "techs_researched"
                        enabled = "[Not(GetVariableSystem.Exists('statistics_techs_researched'))]"
                        onclick = "[GetVariableSystem.Toggle( 'statistics_techs_researched' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp_per_capita' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_incorporated_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_states' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_total_subject_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_population_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_literacy_rate' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_sol' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_prestige' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_infamy' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_army_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_army_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_navy_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_navy_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_military_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_military_expenses_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_active_interests' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_investment_pool' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_investment_pool_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gold_reserves' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gold_reserves_limit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_credit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_debt' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_building_levels' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_convoys' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp' )]"
                    }
                    button = {
                        fontsize = 13
                        using = default_button
                        icon = {
                            visible = "[GetVariableSystem.Exists('statistics_expenses')]"
                            using = highlighted_square_selection
                        }
                        size = { 135 37 }
                        text = "expenses_tt"
                        enabled = "[Not(GetVariableSystem.Exists('statistics_expenses'))]"
                        onclick = "[GetVariableSystem.Toggle( 'statistics_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp_per_capita' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_incorporated_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_states' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_total_subject_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_population_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_literacy_rate' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_sol' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_prestige' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_infamy' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_army_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_army_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_navy_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_navy_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_military_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_military_expenses_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_techs_researched' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_active_interests' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_investment_pool' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_investment_pool_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gold_reserves' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gold_reserves_limit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_credit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_debt' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_building_levels' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_convoys' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp' )]"
                    }
                    button = {
                        fontsize = 13
                        using = default_button
                        icon = {
                            visible = "[GetVariableSystem.Exists('statistics_investment_pool')]"
                            using = highlighted_square_selection
                        }
                        size = { 135 37 }
                        text = "investment_pool_tt"
                        enabled = "[Not(GetVariableSystem.Exists('statistics_investment_pool'))]"
                        onclick = "[GetVariableSystem.Toggle( 'statistics_investment_pool' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp_per_capita' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_incorporated_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_states' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_total_subject_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_population_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_literacy_rate' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_sol' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_prestige' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_infamy' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_army_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_army_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_navy_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_navy_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_military_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_military_expenses_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_techs_researched' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_active_interests' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_investment_pool_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gold_reserves' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gold_reserves_limit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_credit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_debt' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_building_levels' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_convoys' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp' )]"
                    }
                    
                    button = {
                        fontsize = 13
                        using = default_button
                        icon = {
                            visible = "[GetVariableSystem.Exists('statistics_gold_reserves_limit')]"
                            using = highlighted_square_selection
                        }
                        size = { 135 37 }
                        text = "gold_reserves_limit"
                        enabled = "[Not(GetVariableSystem.Exists('statistics_gold_reserves_limit'))]"
                        onclick = "[GetVariableSystem.Toggle( 'statistics_gold_reserves_limit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp_per_capita' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_incorporated_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_states' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_total_subject_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_population_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_literacy_rate' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_sol' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_prestige' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_infamy' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_army_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_army_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_navy_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_navy_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_military_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_military_expenses_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_techs_researched' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_active_interests' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_investment_pool' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_investment_pool_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gold_reserves' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_credit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_debt' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_building_levels' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_convoys' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp' )]"
                    }
                    button = {
                        fontsize = 13
                        using = default_button
                        icon = {
                            visible = "[GetVariableSystem.Exists('statistics_credit')]"
                            using = highlighted_square_selection
                        }
                        size = { 135 37 }
                        text = "credit_tt"
                        enabled = "[Not(GetVariableSystem.Exists('statistics_credit'))]"
                        onclick = "[GetVariableSystem.Toggle( 'statistics_credit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp_per_capita' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_incorporated_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_states' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_total_subject_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_population_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_literacy_rate' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_sol' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_prestige' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_infamy' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_army_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_army_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_navy_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_navy_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_military_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_military_expenses_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_techs_researched' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_active_interests' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_investment_pool' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_investment_pool_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gold_reserves' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gold_reserves_limit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_debt' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_building_levels' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_convoys' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp' )]"
                    }
                    button = {
                        fontsize = 13
                        using = default_button
                        icon = {
                            visible = "[GetVariableSystem.Exists('statistics_building_levels')]"
                            using = highlighted_square_selection
                        }
                        size = { 135 37 }
                        text = "building_levels"
                        enabled = "[Not(GetVariableSystem.Exists('statistics_building_levels'))]"
                        onclick = "[GetVariableSystem.Toggle( 'statistics_building_levels' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp_per_capita' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_incorporated_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_states' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_total_subject_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_population_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_literacy_rate' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_sol' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_prestige' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_infamy' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_army_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_army_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_navy_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_navy_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_military_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_military_expenses_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_techs_researched' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_active_interests' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_investment_pool' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_investment_pool_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gold_reserves' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gold_reserves_limit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_credit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_debt' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_convoys' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp' )]"
                    }
                }
            }
            widget = { 
                size = { 160 800 }
                flowcontainer = {
                    direction = vertical
                    margin_top = 13
                    spacing = 13
                    button = {
                        fontsize = 13
                        using = default_button_action
                        size = { 135 37 }
                        text = "flag_mode"
						onclick = "[GetScriptedGui('statistics_sgui').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
                        tooltip = "flag_mode_tooltip"
                    }
                    button = {
                        fontsize = 13
                        using = default_button
                        icon = {
                            visible = "[GetVariableSystem.Exists('statistics_gdp_per_capita')]"
                            using = highlighted_square_selection
                        }
                        size = { 135 37 }
                        text = "gdp_per_capita"
                        enabled = "[Not(GetVariableSystem.Exists('statistics_gdp_per_capita'))]"
                        onclick = "[GetVariableSystem.Toggle( 'statistics_gdp_per_capita' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_incorporated_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_states' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_total_subject_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_population_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_literacy_rate' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_sol' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_prestige' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_infamy' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_army_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_army_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_navy_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_navy_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_military_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_military_expenses_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_techs_researched' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_active_interests' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_investment_pool' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_investment_pool_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gold_reserves' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gold_reserves_limit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_credit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_debt' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_building_levels' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_convoys' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp' )]"
                    }
                    button = {
                        fontsize = 13
                        using = default_button
                        icon = {
                            visible = "[GetVariableSystem.Exists('statistics_incorporated_population')]"
                            using = highlighted_square_selection
                        }
                        size = { 135 37 }
                        text = "incorporated_population"
                        enabled = "[Not(GetVariableSystem.Exists('statistics_incorporated_population'))]"
                        onclick = "[GetVariableSystem.Toggle( 'statistics_incorporated_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp_per_capita' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_states' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_total_subject_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_population_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_literacy_rate' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_sol' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_prestige' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_infamy' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_army_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_army_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_navy_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_navy_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_military_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_military_expenses_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_techs_researched' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_active_interests' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_investment_pool' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_investment_pool_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gold_reserves' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gold_reserves_limit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_credit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_debt' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_building_levels' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_convoys' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp' )]"
                    }
                    button = {
                        fontsize = 13
                        using = default_button
                        icon = {
                            visible = "[GetVariableSystem.Exists('statistics_total_subject_population')]"
                            using = highlighted_square_selection
                        }
                        size = { 135 37 }
                        text = "total_subject_population"
                         enabled = "[Not(GetVariableSystem.Exists('statistics_total_subject_population'))]"
                        onclick = "[GetVariableSystem.Toggle( 'statistics_total_subject_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp_per_capita' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_incorporated_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_states' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_population_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_literacy_rate' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_sol' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_prestige' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_infamy' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_army_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_army_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_navy_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_navy_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_military_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_military_expenses_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_techs_researched' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_active_interests' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_investment_pool' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_investment_pool_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gold_reserves' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gold_reserves_limit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_credit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_debt' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_building_levels' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_convoys' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp' )]"
                    }
                    button = {
                        fontsize = 13
                        using = default_button
                        icon = {
                            visible = "[GetVariableSystem.Exists('statistics_population_share')]"
                            using = highlighted_square_selection
                        }
                        size = { 135 37 }
                        text = "population_share"
                        enabled = "[Not(GetVariableSystem.Exists('statistics_population_share'))]"
                        onclick = "[GetVariableSystem.Toggle( 'statistics_population_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp_per_capita' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_incorporated_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_states' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_total_subject_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_literacy_rate' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_sol' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_prestige' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_infamy' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_army_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_army_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_navy_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_navy_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_military_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_military_expenses_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_techs_researched' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_active_interests' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_investment_pool' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_investment_pool_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gold_reserves' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gold_reserves_limit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_credit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_debt' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_building_levels' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_convoys' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp' )]"
                    }
                    button = {
                        fontsize = 13
                        using = default_button
                        icon = {
                            visible = "[GetVariableSystem.Exists('statistics_sol')]"
                            using = highlighted_square_selection
                        }
                        size = { 135 37 }
                        text = "sol_tt"
                        enabled = "[Not(GetVariableSystem.Exists('statistics_sol'))]"
                        onclick = "[GetVariableSystem.Toggle( 'statistics_sol' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp_per_capita' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_incorporated_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_states' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_total_subject_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_population_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_literacy_rate' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_prestige' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_infamy' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_army_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_army_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_navy_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_navy_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_military_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_military_expenses_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_techs_researched' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_active_interests' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_investment_pool' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_investment_pool_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gold_reserves' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gold_reserves_limit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_credit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_debt' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_building_levels' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_convoys' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp' )]"
                    }
                    button = {
                        fontsize = 13
                        using = default_button
                        icon = {
                            visible = "[GetVariableSystem.Exists('statistics_infamy')]"
                            using = highlighted_square_selection
                        }
                        size = { 135 37 }
                        text = "infamy_tt"
                        enabled = "[Not(GetVariableSystem.Exists('statistics_infamy'))]"
                        onclick = "[GetVariableSystem.Toggle( 'statistics_infamy' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp_per_capita' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_incorporated_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_states' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_total_subject_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_population_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_literacy_rate' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_sol' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_prestige' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_army_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_army_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_navy_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_navy_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_military_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_military_expenses_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_techs_researched' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_active_interests' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_investment_pool' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_investment_pool_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gold_reserves' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gold_reserves_limit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_credit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_debt' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_building_levels' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_convoys' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp' )]"
                    }
                    button = {
                        fontsize = 13
                        using = default_button
                        icon = {
                            visible = "[GetVariableSystem.Exists('statistics_army_power_projection')]"
                            using = highlighted_square_selection
                        }
                        size = { 135 37 }
                        text = "army_power_projection"
                          enabled = "[Not(GetVariableSystem.Exists('statistics_army_power_projection'))]"
                        onclick = "[GetVariableSystem.Toggle( 'statistics_army_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp_per_capita' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_incorporated_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_states' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_total_subject_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_population_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_literacy_rate' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_sol' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_prestige' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_infamy' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_army_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_navy_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_navy_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_military_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_military_expenses_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_techs_researched' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_active_interests' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_investment_pool' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_investment_pool_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gold_reserves' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gold_reserves_limit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_credit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_debt' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_building_levels' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_convoys' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp' )]"
                    }
                    button = {
                        fontsize = 13
                        using = default_button
                        icon = {
                            visible = "[GetVariableSystem.Exists('statistics_navy_power_projection')]"
                            using = highlighted_square_selection
                        }
                        size = { 135 37 }
                        text = "navy_power_projection"
                        enabled = "[Not(GetVariableSystem.Exists('statistics_navy_power_projection'))]"
                        onclick = "[GetVariableSystem.Toggle( 'statistics_navy_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp_per_capita' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_incorporated_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_states' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_total_subject_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_population_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_literacy_rate' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_sol' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_prestige' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_infamy' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_army_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_army_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_navy_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_military_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_military_expenses_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_techs_researched' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_active_interests' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_investment_pool' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_investment_pool_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gold_reserves' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gold_reserves_limit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_credit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_debt' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_building_levels' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_convoys' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp' )]"
                    }
                    button = {
                        fontsize = 13
                        using = default_button
                        icon = {
                            visible = "[GetVariableSystem.Exists('statistics_military_expenses_share')]"
                            using = highlighted_square_selection
                        }
                        size = { 135 37 }
                        text = "military_expenses_share"
                         enabled = "[Not(GetVariableSystem.Exists('statistics_military_expenses_share'))]"
                        onclick = "[GetVariableSystem.Toggle( 'statistics_military_expenses_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp_per_capita' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_incorporated_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_states' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_total_subject_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_population_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_literacy_rate' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_sol' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_prestige' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_infamy' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_army_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_army_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_navy_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_navy_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_military_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_techs_researched' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_active_interests' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_investment_pool' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_investment_pool_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gold_reserves' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gold_reserves_limit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_credit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_debt' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_building_levels' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_convoys' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp' )]"
                    }
                    button = {
                        fontsize = 13
                        using = default_button
                        icon = {
                            visible = "[GetVariableSystem.Exists('statistics_num_active_interests')]"
                            using = highlighted_square_selection
                        }
                        size = { 135 37 }
                        text = "num_active_interests"
                        enabled = "[Not(GetVariableSystem.Exists('statistics_num_active_interests'))]"
                        onclick = "[GetVariableSystem.Toggle( 'statistics_num_active_interests' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp_per_capita' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_incorporated_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_states' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_total_subject_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_population_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_literacy_rate' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_sol' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_prestige' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_infamy' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_army_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_army_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_navy_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_navy_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_military_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_military_expenses_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_techs_researched' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_investment_pool' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_investment_pool_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gold_reserves' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gold_reserves_limit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_credit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_debt' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_building_levels' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_convoys' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp' )]"
                    }
                    button = {
                        fontsize = 13
                        using = default_button
                        icon = {
                            visible = "[GetVariableSystem.Exists('statistics_income')]"
                            using = highlighted_square_selection
                        }
                        size = { 135 37 }
                        text = "income_tt"
                         enabled = "[Not(GetVariableSystem.Exists('statistics_income'))]"
                        onclick = "[GetVariableSystem.Toggle( 'statistics_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp_per_capita' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_incorporated_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_states' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_total_subject_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_population_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_literacy_rate' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_sol' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_prestige' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_infamy' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_army_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_army_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_navy_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_navy_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_military_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_military_expenses_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_techs_researched' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_active_interests' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_investment_pool' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_investment_pool_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gold_reserves' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gold_reserves_limit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_credit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_debt' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_building_levels' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_convoys' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp' )]"
                    }
                    button = {
                        fontsize = 13
                        using = default_button
                        icon = {
                            visible = "[GetVariableSystem.Exists('statistics_investment_pool_income')]"
                            using = highlighted_square_selection
                        }
                        size = { 135 37 }
                        text = "investment_pool_income"
                        enabled = "[Not(GetVariableSystem.Exists('statistics_investment_pool_income'))]"
                        onclick = "[GetVariableSystem.Toggle( 'statistics_investment_pool_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp_per_capita' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_incorporated_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_states' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_total_subject_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_population_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_literacy_rate' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_sol' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_prestige' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_infamy' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_army_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_army_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_navy_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_navy_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_military_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_military_expenses_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_techs_researched' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_active_interests' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_investment_pool' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gold_reserves' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gold_reserves_limit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_credit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_debt' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_building_levels' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_convoys' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp' )]"
                    }
                    button = {
                        fontsize = 13
                        using = default_button
                        icon = {
                            visible = "[GetVariableSystem.Exists('statistics_gold_reserves')]"
                            using = highlighted_square_selection
                        }
                        size = { 135 37 }
                        text = "gold_reserves"
                        enabled = "[Not(GetVariableSystem.Exists('statistics_gold_reserves'))]"
                        onclick = "[GetVariableSystem.Toggle( 'statistics_gold_reserves' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp_per_capita' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_incorporated_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_states' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_total_subject_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_population_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_literacy_rate' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_sol' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_prestige' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_infamy' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_army_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_army_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_navy_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_navy_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_military_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_military_expenses_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_techs_researched' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_active_interests' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_investment_pool' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_investment_pool_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gold_reserves_limit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_credit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_debt' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_building_levels' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_convoys' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp' )]"
                    }
                    button = {
                        fontsize = 13
                        using = default_button
                        icon = {
                            visible = "[GetVariableSystem.Exists('statistics_debt')]"
                            using = highlighted_square_selection
                        }
                        size = { 135 37 }
                        text = "debt"
                        enabled = "[Not(GetVariableSystem.Exists('statistics_debt'))]"
                        onclick = "[GetVariableSystem.Toggle( 'statistics_debt' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp_per_capita' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_incorporated_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_states' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_total_subject_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_population_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_literacy_rate' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_sol' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_prestige' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_infamy' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_army_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_army_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_navy_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_navy_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_military_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_military_expenses_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_techs_researched' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_active_interests' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_investment_pool' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_investment_pool_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gold_reserves' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gold_reserves_limit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_credit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_building_levels' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_convoys' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp' )]"
                    }
                    button = {
                        fontsize = 13
                        using = default_button
                        icon = {
                            visible = "[GetVariableSystem.Exists('statistics_num_convoys')]"
                            using = highlighted_square_selection
                        }
                        size = { 135 37 }
                        text = "num_convoys_available"
                        enabled = "[Not(GetVariableSystem.Exists('statistics_num_convoys'))]"
                        onclick = "[GetVariableSystem.Toggle( 'statistics_num_convoys' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp_per_capita' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_incorporated_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_states' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_total_subject_population' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_population_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_literacy_rate' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_sol' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_prestige' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_infamy' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_army_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_army_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_navy_size' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_navy_power_projection' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_military_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_military_expenses_share' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_techs_researched' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_num_active_interests' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_expenses' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_investment_pool' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_investment_pool_income' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gold_reserves' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gold_reserves_limit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_credit' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_debt' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_building_levels' )]"
                        onclick = "[GetVariableSystem.Clear( 'statistics_gdp' )]"
                    }
                }
            }
            widget = {
                size = { 1000 800 }
                background = {
                    texture = "gfx\interface\backgrounds\white.dds" 
                    alpha = 0.73
                }
                vbox = {
                    visible = "[GetVariableSystem.Exists('statistics_gdp')]"
                    layoutpolicy_horizontal = expanding
                    layoutpolicy_vertical = expanding
                    margin = { 5 0 }

                    background = {
                        texture = "gfx\interface\illustrations\top_illus\top_illu_budget.dds"

                        modify_texture = {
                            texture = "gfx/interface/backgrounds/default_bg_shading.dds"
                            spriteType = Corneredstretched
                            spriteborder = { 0 0 }
                            blend_mode = overlay
                        }
                        modify_texture = {
                            using = texture_velvet
                        }
                    }

                    dynamicgridbox = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = preferred
                        datamodel = "[GetGlobalList('gdp_ranking_global_list')]"
                        ignoreinvisible = yes
                        spacing = 15
                        item = {
                            flowcontainer = {
                                spacing = 10
                                margin_top = 13
                                vertical = yes
                                datacontext = "[Scope.GetCountry]"
                                widget = {
                                    textbox = {
                                        position = { 99 20 }
                                        size = { 3000 28 }
                                        fontsize = 17
                                        parentanchor = vcenter
                                        align = nobaseline|right
                                        max_width = "[FixedPointToFloat(Country.MakeScope.Var('gdp_var').GetValue)]"
                                        raw_text = "[Country.MakeScope.Var('gdp_value_tt').GetValue)|vD]   "
                                        background = {
                                            texture = "gfx/interface/backgrounds/fancy_pattern_2.dds"
                                            color = "[Country.GetMapColor]"
                                            mirror = horizontal 
                                            using = frame_small_mask
                                            alpha = 1.0
                                            
                                            modify_texture = {
                                                blend_mode = add
                                            }
                                        }
                                    }
                                }
                                flowcontainer = {
                                    textbox = {
                                        raw_text = "[Country.GetFlagTextIcon]"
                                        autoresize = yes
                                        parentanchor = vcenter
                                        align = nobaseline
                                        fontsize = 30
                                        margin_left = 10
                                        tooltip = "[Country.GetNameNoFlag]"	
                                    }
                                }
                            }
                        }
                    }
                    
                    widget = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = expanding
                    }
                }
                vbox = {
                    visible = "[GetVariableSystem.Exists('statistics_gdp_per_capita')]"
                    layoutpolicy_horizontal = expanding
                    layoutpolicy_vertical = expanding
                    margin = { 5 0 }
                    background = {
                        texture = "gfx\interface\illustrations\top_illus\top_illu_budget.dds"

                        modify_texture = {
                            texture = "gfx/interface/backgrounds/default_bg_shading.dds"
                            spriteType = Corneredstretched
                            spriteborder = { 0 0 }
                            blend_mode = overlay
                        }
                        modify_texture = {
                            using = texture_velvet
                        }
                    }

                    dynamicgridbox = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = preferred
                        datamodel = "[GetGlobalList('gdp_per_capita_ranking_global_list')]"
                        ignoreinvisible = yes
                        spacing = 15
                        item = {
                            flowcontainer = {
                                spacing = 10
                                margin_top = 13
                                vertical = yes
                                datacontext = "[Scope.GetCountry]"
                                widget = {
                                    textbox = {
                                        position = { 99 20 }
                                        size = { 3000 28 }
                                        fontsize = 17
                                        parentanchor = vcenter
                                        align = nobaseline|right
                                        max_width = "[FixedPointToFloat(Country.MakeScope.Var('gdp_per_capita_var').GetValue)]"
                                        
                                        raw_text = "@money![Country.MakeScope.Var('gdp_per_capita_value_tt').GetValue)|v]   "
                                        background = {
                                            texture = "gfx/interface/backgrounds/fancy_pattern_2.dds"
                                            color = "[Country.GetMapColor]"
                                            mirror = horizontal 
                                            using = frame_small_mask
                                            alpha = 1.0
                                            
                                            modify_texture = {
                                                blend_mode = add
                                            }
                                        }
                                    }
                                }
                               flowcontainer = {
                                    textbox = {
                                        raw_text = "[Country.GetFlagTextIcon]"
                                        autoresize = yes
                                        parentanchor = vcenter
                                        align = nobaseline
                                        fontsize = 30
                                        margin_left = 10
                                        tooltip = "[Country.GetNameNoFlag]"	
                                    }
                                }
                            }
                        }
                    }
                    
                    widget = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = expanding
                    }
                }
                vbox = {
                    visible = "[GetVariableSystem.Exists('statistics_population')]"
                    layoutpolicy_horizontal = expanding
                    layoutpolicy_vertical = expanding
                    margin = { 5 0 }
                    background = {
                        texture = "gfx\interface\illustrations\top_illus\top_illu_cultures.dds"

                        modify_texture = {
                            texture = "gfx/interface/backgrounds/default_bg_shading.dds"
                            spriteType = Corneredstretched
                            spriteborder = { 0 0 }
                            blend_mode = overlay
                        }
                        modify_texture = {
                            using = texture_velvet
                        }
                    }
                    
                    dynamicgridbox = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = preferred
                        datamodel = "[GetGlobalList('population_ranking_global_list')]"
                        ignoreinvisible = yes
                        spacing = 15
                        item = {
                            flowcontainer = {
                                spacing = 10
                                margin_top = 13
                                vertical = yes
                                datacontext = "[Scope.GetCountry]"
                                widget = {
                                    textbox = {
                                        position = { 99 20 }
                                        size = { 3000 28 }
                                        fontsize = 17
                                        parentanchor = vcenter
                                        align = nobaseline|right
                                        max_width = "[FixedPointToFloat(Country.MakeScope.Var('population_var').GetValue)]"
                                        
                                        raw_text = "[Country.MakeScope.Var('population_value_tt').GetValue)|vD]   "
                                        background = {
                                            texture = "gfx/interface/backgrounds/fancy_pattern_2.dds"
                                            color = "[Country.GetMapColor]"
                                            mirror = horizontal 
                                            using = frame_small_mask
                                            alpha = 1.0
                                            
                                            modify_texture = {
                                                blend_mode = add
                                            }
                                        }
                                    }
                                }
                               flowcontainer = {
                                    textbox = {
                                        raw_text = "[Country.GetFlagTextIcon]"
                                        autoresize = yes
                                        parentanchor = vcenter
                                        align = nobaseline
                                        fontsize = 30
                                        margin_left = 10
                                        tooltip = "[Country.GetNameNoFlag]"	
                                    }
                                }
                            }
                        }
                    }
                    
                    widget = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = expanding
                    }
                }
                vbox = {
                    visible = "[GetVariableSystem.Exists('statistics_incorporated_population')]"
                    layoutpolicy_horizontal = expanding
                    layoutpolicy_vertical = expanding
                    margin = { 5 0 }
                    background = {
                        texture = "gfx\interface\illustrations\top_illus\top_illu_cultures.dds"

                        modify_texture = {
                            texture = "gfx/interface/backgrounds/default_bg_shading.dds"
                            spriteType = Corneredstretched
                            spriteborder = { 0 0 }
                            blend_mode = overlay
                        }
                        modify_texture = {
                            using = texture_velvet
                        }
                    }

                    dynamicgridbox = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = preferred
                        datamodel = "[GetGlobalList('incorporated_population_ranking_global_list')]"
                        ignoreinvisible = yes
                        spacing = 15
                        item = {
                            flowcontainer = {
                                spacing = 10
                                margin_top = 13
                                vertical = yes
                                datacontext = "[Scope.GetCountry]"
                                widget = {
                                    textbox = {
                                        position = { 99 20 }
                                        size = { 3000 28 }
                                        fontsize = 17
                                        parentanchor = vcenter
                                        align = nobaseline|right
                                        max_width = "[FixedPointToFloat(Country.MakeScope.Var('incorporated_population_var').GetValue)]"
                                        
                                        raw_text = "[Country.MakeScope.Var('incorporated_population_value_tt').GetValue)|vD]   "
                                        background = {
                                            texture = "gfx/interface/backgrounds/fancy_pattern_2.dds"
                                            color = "[Country.GetMapColor]"
                                            mirror = horizontal 
                                            using = frame_small_mask
                                            alpha = 1.0
                                            
                                            modify_texture = {
                                                blend_mode = add
                                            }
                                        }
                                    }
                                }
                               flowcontainer = {
                                    textbox = {
                                        raw_text = "[Country.GetFlagTextIcon]"
                                        autoresize = yes
                                        parentanchor = vcenter
                                        align = nobaseline
                                        fontsize = 30
                                        margin_left = 10
                                        tooltip = "[Country.GetNameNoFlag]"	
                                    }
                                }
                            }
                        }
                    }
                    
                    widget = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = expanding
                    }
                }
                vbox = {
                    visible = "[GetVariableSystem.Exists('statistics_total_subject_population')]"
                    layoutpolicy_horizontal = expanding
                    layoutpolicy_vertical = expanding
                    margin = { 5 0 }
                    background = {
                        texture = "gfx\interface\illustrations\top_illus\top_illu_cultures.dds"

                        modify_texture = {
                            texture = "gfx/interface/backgrounds/default_bg_shading.dds"
                            spriteType = Corneredstretched
                            spriteborder = { 0 0 }
                            blend_mode = overlay
                        }
                        modify_texture = {
                            using = texture_velvet
                        }
                    }

                    dynamicgridbox = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = preferred
                        datamodel = "[GetGlobalList('total_subject_population_ranking_global_list')]"
                        ignoreinvisible = yes
                        spacing = 15
                        item = {
                            flowcontainer = {
                                spacing = 10
                                margin_top = 13
                                vertical = yes
                                datacontext = "[Scope.GetCountry]"
                                widget = {
                                    textbox = {
                                        position = { 99 20 }
                                        size = { 3000 28 }
                                        fontsize = 17
                                        parentanchor = vcenter
                                        align = nobaseline|right
                                        max_width = "[FixedPointToFloat(Country.MakeScope.Var('total_subject_population_var').GetValue)]"
                                        
                                        raw_text = "[Country.MakeScope.Var('total_subject_population_value_tt').GetValue)|vD]    "
                                        background = {
                                            texture = "gfx/interface/backgrounds/fancy_pattern_2.dds"
                                            color = "[Country.GetMapColor]"
                                            mirror = horizontal 
                                            using = frame_small_mask
                                            alpha = 1.0
                                            
                                            modify_texture = {
                                                blend_mode = add
                                            }
                                        }
                                    }
                                }
                               flowcontainer = {
                                    textbox = {
                                        raw_text = "[Country.GetFlagTextIcon]"
                                        autoresize = yes
                                        parentanchor = vcenter
                                        align = nobaseline
                                        fontsize = 30
                                        margin_left = 10
                                        tooltip = "[Country.GetNameNoFlag]"	
                                    }
                                }
                            }
                        }
                    }
                    
                    widget = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = expanding
                    }
                }
                vbox = {
                    visible = "[GetVariableSystem.Exists('statistics_num_states')]"
                    layoutpolicy_horizontal = expanding
                    layoutpolicy_vertical = expanding
                    margin = { 5 0 }
                    background = {
                        texture = "gfx\interface\illustrations\top_illus\top_illu_cultures.dds"

                        modify_texture = {
                            texture = "gfx/interface/backgrounds/default_bg_shading.dds"
                            spriteType = Corneredstretched
                            spriteborder = { 0 0 }
                            blend_mode = overlay
                        }
                        modify_texture = {
                            using = texture_velvet
                        }
                    }

                    dynamicgridbox = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = preferred
                        datamodel = "[GetGlobalList('state_num_ranking_global_list')]"
                        ignoreinvisible = yes
                        spacing = 15
                        item = {
                            flowcontainer = {
                                spacing = 10
                                margin_top = 13
                                vertical = yes
                                datacontext = "[Scope.GetCountry]"
                                widget = {
                                    textbox = {
                                        position = { 99 20 }
                                        size = { 3000 28 }
                                        fontsize = 17
                                        parentanchor = vcenter
                                        align = nobaseline|right
                                        max_width = "[FixedPointToFloat(Country.MakeScope.Var('state_num_var').GetValue)]"
                                        
                                        raw_text = "[Country.MakeScope.Var('state_num_value_tt').GetValue)|v0]   "
                                        background = {
                                            texture = "gfx/interface/backgrounds/fancy_pattern_2.dds"
                                            color = "[Country.GetMapColor]"
                                            mirror = horizontal 
                                            using = frame_small_mask
                                            alpha = 1.0
                                            
                                            modify_texture = {
                                                blend_mode = add
                                            }
                                        }
                                    }
                                }
                               flowcontainer = {
                                    textbox = {
                                        raw_text = "[Country.GetFlagTextIcon]"
                                        autoresize = yes
                                        parentanchor = vcenter
                                        align = nobaseline
                                        fontsize = 30
                                        margin_left = 10
                                        tooltip = "[Country.GetNameNoFlag]"	
                                    }
                                }
                            }
                        }
                    }
                    
                    widget = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = expanding
                    }
                }
                vbox = {
                    visible = "[GetVariableSystem.Exists('statistics_gdp_share')]"
                    layoutpolicy_horizontal = expanding
                    layoutpolicy_vertical = expanding
                    margin = { 5 0 }
                    background = {
                        texture = "gfx\interface\illustrations\top_illus\top_illu_budget.dds"

                        modify_texture = {
                            texture = "gfx/interface/backgrounds/default_bg_shading.dds"
                            spriteType = Corneredstretched
                            spriteborder = { 0 0 }
                            blend_mode = overlay
                        }
                        modify_texture = {
                            using = texture_velvet
                        }
                    }

                    dynamicgridbox = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = preferred
                        datamodel = "[GetGlobalList('gdp_share_ranking_global_list')]"
                        ignoreinvisible = yes
                        spacing = 15
                        item = {
                            flowcontainer = {
                                spacing = 10
                                margin_top = 13
                                vertical = yes
                                datacontext = "[Scope.GetCountry]"
                                widget = {
                                    textbox = {
                                        position = { 99 20 }
                                        size = { 3000 28 }
                                        fontsize = 17
                                        parentanchor = vcenter
                                        align = nobaseline|right
                                        max_width = "[FixedPointToFloat(Country.MakeScope.Var('gdp_share_var').GetValue)]"
                                        
                                        raw_text = "[Country.MakeScope.Var('gdp_share_value_tt').GetValue)|v%]   "
                                        background = {
                                            texture = "gfx/interface/backgrounds/fancy_pattern_2.dds"
                                            color = "[Country.GetMapColor]"
                                            mirror = horizontal 
                                            using = frame_small_mask
                                            alpha = 1.0
                                            
                                            modify_texture = {
                                                blend_mode = add
                                            }
                                        }
                                    }
                                }
                               flowcontainer = {
                                    textbox = {
                                        raw_text = "[Country.GetFlagTextIcon]"
                                        autoresize = yes
                                        parentanchor = vcenter
                                        align = nobaseline
                                        fontsize = 30
                                        margin_left = 10
                                        tooltip = "[Country.GetNameNoFlag]"	
                                    }
                                }
                            }
                        }
                    }
                    
                    widget = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = expanding
                    }
                }
                vbox = {
                    visible = "[GetVariableSystem.Exists('statistics_population_share')]"
                    layoutpolicy_horizontal = expanding
                    layoutpolicy_vertical = expanding
                    margin = { 5 0 }
                    background = {
                        texture = "gfx\interface\illustrations\top_illus\top_illu_cultures.dds"

                        modify_texture = {
                            texture = "gfx/interface/backgrounds/default_bg_shading.dds"
                            spriteType = Corneredstretched
                            spriteborder = { 0 0 }
                            blend_mode = overlay
                        }
                        modify_texture = {
                            using = texture_velvet
                        }
                    }

                    dynamicgridbox = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = preferred
                        datamodel = "[GetGlobalList('population_share_ranking_global_list')]"
                        ignoreinvisible = yes
                        spacing = 15
                        item = {
                            flowcontainer = {
                                spacing = 10
                                margin_top = 13
                                vertical = yes
                                datacontext = "[Scope.GetCountry]"
                                widget = {
                                    textbox = {
                                        position = { 99 20 }
                                        size = { 3000 28 }
                                        fontsize = 17
                                        parentanchor = vcenter
                                        align = nobaseline|right
                                        max_width = "[FixedPointToFloat(Country.MakeScope.Var('population_share_var').GetValue)]"
                                        
                                        raw_text = "[Country.MakeScope.Var('population_share_value_tt').GetValue)|v%]   "
                                        background = {
                                            texture = "gfx/interface/backgrounds/fancy_pattern_2.dds"
                                            color = "[Country.GetMapColor]"
                                            mirror = horizontal 
                                            using = frame_small_mask
                                            alpha = 1.0
                                            
                                            modify_texture = {
                                                blend_mode = add
                                            }
                                        }
                                    }
                                }
                               flowcontainer = {
                                    textbox = {
                                        raw_text = "[Country.GetFlagTextIcon]"
                                        autoresize = yes
                                        parentanchor = vcenter
                                        align = nobaseline
                                        fontsize = 30
                                        margin_left = 10
                                        tooltip = "[Country.GetNameNoFlag]"	
                                    }
                                }
                            }
                        }
                    }
                    
                    widget = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = expanding
                    }
                }
                vbox = {
                    visible = "[GetVariableSystem.Exists('statistics_literacy_rate')]"
                    layoutpolicy_horizontal = expanding
                    layoutpolicy_vertical = expanding
                    margin = { 5 0 }
                    background = {
                        texture = "gfx\interface\illustrations\top_illus\top_illu_diplomacy.dds"

                        modify_texture = {
                            texture = "gfx/interface/backgrounds/default_bg_shading.dds"
                            spriteType = Corneredstretched
                            spriteborder = { 0 0 }
                            blend_mode = overlay
                        }
                        modify_texture = {
                            using = texture_velvet
                        }
                    }

                    dynamicgridbox = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = preferred
                        datamodel = "[GetGlobalList('literacy_rate_ranking_global_list')]"
                        ignoreinvisible = yes
                        spacing = 15
                        item = {
                            flowcontainer = {
                                spacing = 10
                                margin_top = 13
                                vertical = yes
                                datacontext = "[Scope.GetCountry]"
                                widget = {
                                    textbox = {
                                        position = { 99 20 }
                                        size = { 3000 28 }
                                        fontsize = 17
                                        parentanchor = vcenter
                                        align = nobaseline|right
                                        max_width = "[FixedPointToFloat(Country.MakeScope.Var('literacy_rate_var').GetValue)]"
                                        
                                        raw_text = "[Country.MakeScope.Var('literacy_rate_value_tt').GetValue)|v%]   "
                                        background = {
                                            texture = "gfx/interface/backgrounds/fancy_pattern_2.dds"
                                            color = "[Country.GetMapColor]"
                                            mirror = horizontal 
                                            using = frame_small_mask
                                            alpha = 1.0
                                            
                                            modify_texture = {
                                                blend_mode = add
                                            }
                                        }
                                    }
                                }
                               flowcontainer = {
                                    textbox = {
                                        raw_text = "[Country.GetFlagTextIcon]"
                                        autoresize = yes
                                        parentanchor = vcenter
                                        align = nobaseline
                                        fontsize = 30
                                        margin_left = 10
                                        tooltip = "[Country.GetNameNoFlag]"	
                                    }
                                }
                            }
                        }
                    }
                    
                    widget = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = expanding
                    }
                }
                vbox = {
                    visible = "[GetVariableSystem.Exists('statistics_sol')]"
                    layoutpolicy_horizontal = expanding
                    layoutpolicy_vertical = expanding
                    margin = { 5 0 }
                    background = {
                        texture = "gfx\interface\illustrations\top_illus\top_illu_companies.dds"

                        modify_texture = {
                            texture = "gfx/interface/backgrounds/default_bg_shading.dds"
                            spriteType = Corneredstretched
                            spriteborder = { 0 0 }
                            blend_mode = overlay
                        }
                        modify_texture = {
                            using = texture_velvet
                        }
                    }

                    dynamicgridbox = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = preferred
                        datamodel = "[GetGlobalList('sol_ranking_global_list')]"
                        ignoreinvisible = yes
                        spacing = 15
                        item = {
                            flowcontainer = {
                                spacing = 10
                                margin_top = 13
                                vertical = yes
                                datacontext = "[Scope.GetCountry]"
                                widget = {
                                    textbox = {
                                        position = { 99 20 }
                                        size = { 3000 28 }
                                        fontsize = 17
                                        parentanchor = vcenter
                                        align = nobaseline|right
                                        max_width = "[FixedPointToFloat(Country.MakeScope.Var('sol_var').GetValue)]"
                                        
                                        raw_text = "[Country.MakeScope.Var('sol_value_tt').GetValue)|v]   "
                                        background = {
                                            texture = "gfx/interface/backgrounds/fancy_pattern_2.dds"
                                            color = "[Country.GetMapColor]"
                                            mirror = horizontal 
                                            using = frame_small_mask
                                            alpha = 1.0
                                            
                                            modify_texture = {
                                                blend_mode = add
                                            }
                                        }
                                    }
                                }
                               flowcontainer = {
                                    textbox = {
                                        raw_text = "[Country.GetFlagTextIcon]"
                                        autoresize = yes
                                        parentanchor = vcenter
                                        align = nobaseline
                                        fontsize = 30
                                        margin_left = 10
                                        tooltip = "[Country.GetNameNoFlag]"	
                                    }
                                }
                            }
                        }
                    }
                    
                    widget = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = expanding
                    }
                }
                vbox = {
                    visible = "[GetVariableSystem.Exists('statistics_prestige')]"
                    layoutpolicy_horizontal = expanding
                    layoutpolicy_vertical = expanding
                    margin = { 5 0 }
                    background = {
                        texture = "gfx\interface\illustrations\top_illus\top_illu_lobby_pro.dds"

                        modify_texture = {
                            texture = "gfx/interface/backgrounds/default_bg_shading.dds"
                            spriteType = Corneredstretched
                            spriteborder = { 0 0 }
                            blend_mode = overlay
                        }
                        modify_texture = {
                            using = texture_velvet
                        }
                    }

                    dynamicgridbox = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = preferred
                        datamodel = "[GetGlobalList('prestige_ranking_global_list')]"
                        ignoreinvisible = yes
                        spacing = 15
                        item = {
                            flowcontainer = {
                                spacing = 10
                                margin_top = 13
                                vertical = yes
                                datacontext = "[Scope.GetCountry]"
                                widget = {
                                    textbox = {
                                        position = { 99 20 }
                                        size = { 3000 28 }
                                        fontsize = 17
                                        parentanchor = vcenter
                                        align = nobaseline|right
                                        max_width = "[FixedPointToFloat(Country.MakeScope.Var('prestige_var').GetValue)]"
                                        
                                        raw_text = "[Country.MakeScope.Var('prestige_value_tt').GetValue)|v0]   "
                                        background = {
                                            texture = "gfx/interface/backgrounds/fancy_pattern_2.dds"
                                            color = "[Country.GetMapColor]"
                                            mirror = horizontal 
                                            using = frame_small_mask
                                            alpha = 1.0
                                            
                                            modify_texture = {
                                                blend_mode = add
                                            }
                                        }
                                    }
                                }
                               flowcontainer = {
                                    textbox = {
                                        raw_text = "[Country.GetFlagTextIcon]"
                                        autoresize = yes
                                        parentanchor = vcenter
                                        align = nobaseline
                                        fontsize = 30
                                        margin_left = 10
                                        tooltip = "[Country.GetNameNoFlag]"	
                                    }
                                }
                            }
                        }
                    }
                    
                    widget = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = expanding
                    }
                }
                vbox = {
                    visible = "[GetVariableSystem.Exists('statistics_infamy')]"
                    layoutpolicy_horizontal = expanding
                    layoutpolicy_vertical = expanding
                    margin = { 5 0 }
                    background = {
                        texture = "gfx\interface\illustrations\top_illus\top_illu_lobby_pro.dds"

                        modify_texture = {
                            texture = "gfx/interface/backgrounds/default_bg_shading.dds"
                            spriteType = Corneredstretched
                            spriteborder = { 0 0 }
                            blend_mode = overlay
                        }
                        modify_texture = {
                            using = texture_velvet
                        }
                    }

                    dynamicgridbox = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = preferred
                        datamodel = "[GetGlobalList('infamy_ranking_global_list')]"
                        ignoreinvisible = yes
                        spacing = 15
                        item = {
                            flowcontainer = {
                                spacing = 10
                                margin_top = 13
                                vertical = yes
                                datacontext = "[Scope.GetCountry]"
                                widget = {
                                    textbox = {
                                        position = { 99 20 }
                                        size = { 3000 28 }
                                        fontsize = 17
                                        parentanchor = vcenter
                                        align = nobaseline|right
                                        max_width = "[FixedPointToFloat(Country.MakeScope.Var('infamy_var').GetValue)]"
                                        
                                        raw_text = "[Country.MakeScope.Var('infamy_value_tt').GetValue)|v]   "
                                        background = {
                                            texture = "gfx/interface/backgrounds/fancy_pattern_2.dds"
                                            color = "[Country.GetMapColor]"
                                            mirror = horizontal 
                                            using = frame_small_mask
                                            alpha = 1.0
                                            
                                            modify_texture = {
                                                blend_mode = add
                                            }
                                        }
                                    }
                                }
                               flowcontainer = {
                                    textbox = {
                                        raw_text = "[Country.GetFlagTextIcon]"
                                        autoresize = yes
                                        parentanchor = vcenter
                                        align = nobaseline
                                        fontsize = 30
                                        margin_left = 10
                                        tooltip = "[Country.GetNameNoFlag]"	
                                    }
                                }
                            }
                        }
                    }
                    
                    widget = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = expanding
                    }
                }
                vbox = {
                    visible = "[GetVariableSystem.Exists('statistics_army_size')]"
                    layoutpolicy_horizontal = expanding
                    layoutpolicy_vertical = expanding
                    margin = { 5 0 }
                    background = {
                        texture = "gfx\interface\illustrations\top_illus\top_illu_army.dds"

                        modify_texture = {
                            texture = "gfx/interface/backgrounds/default_bg_shading.dds"
                            spriteType = Corneredstretched
                            spriteborder = { 0 0 }
                            blend_mode = overlay
                        }
                        modify_texture = {
                            using = texture_velvet
                        }
                    }

                    dynamicgridbox = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = preferred
                        datamodel = "[GetGlobalList('army_size_ranking_global_list')]"
                        ignoreinvisible = yes
                        spacing = 15
                        item = {
                            flowcontainer = {
                                spacing = 10
                                margin_top = 13
                                vertical = yes
                                datacontext = "[Scope.GetCountry]"
                                widget = {
                                    textbox = {
                                        position = { 99 20 }
                                        size = { 3000 28 }
                                        fontsize = 17
                                        parentanchor = vcenter
                                        align = nobaseline|right
                                        max_width = "[FixedPointToFloat(Country.MakeScope.Var('army_size_var').GetValue)]"
                                        
                                        raw_text = "[Country.MakeScope.Var('army_size_value_tt').GetValue)|v0]   "
                                        background = {
                                            texture = "gfx/interface/backgrounds/fancy_pattern_2.dds"
                                            color = "[Country.GetMapColor]"
                                            mirror = horizontal 
                                            using = frame_small_mask
                                            alpha = 1.0
                                            
                                            modify_texture = {
                                                blend_mode = add
                                            }
                                        }
                                    }
                                }
                               flowcontainer = {
                                    textbox = {
                                        raw_text = "[Country.GetFlagTextIcon]"
                                        autoresize = yes
                                        parentanchor = vcenter
                                        align = nobaseline
                                        fontsize = 30
                                        margin_left = 10
                                        tooltip = "[Country.GetNameNoFlag]"	
                                    }
                                }
                            }
                        }
                    }
                    
                    widget = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = expanding
                    }
                }
                vbox = {
                    visible = "[GetVariableSystem.Exists('statistics_navy_size')]"
                    layoutpolicy_horizontal = expanding
                    layoutpolicy_vertical = expanding
                    margin = { 5 0 }
                    background = {
                        texture = "gfx\interface\illustrations\top_illus\top_illu_navy.dds"

                        modify_texture = {
                            texture = "gfx/interface/backgrounds/default_bg_shading.dds"
                            spriteType = Corneredstretched
                            spriteborder = { 0 0 }
                            blend_mode = overlay
                        }
                        modify_texture = {
                            using = texture_velvet
                        }
                    }

                    dynamicgridbox = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = preferred
                        datamodel = "[GetGlobalList('navy_size_ranking_global_list')]"
                        ignoreinvisible = yes
                        spacing = 15
                        item = {
                            flowcontainer = {
                                spacing = 10
                                margin_top = 13
                                vertical = yes
                                datacontext = "[Scope.GetCountry]"
                                widget = {
                                    textbox = {
                                        position = { 99 20 }
                                        size = { 3000 28 }
                                        fontsize = 17
                                        parentanchor = vcenter
                                        align = nobaseline|right
                                        max_width = "[FixedPointToFloat(Country.MakeScope.Var('navy_size_var').GetValue)]"
                                        
                                        raw_text = "[Country.MakeScope.Var('navy_size_value_tt').GetValue)|v0]   "
                                        background = {
                                            texture = "gfx/interface/backgrounds/fancy_pattern_2.dds"
                                            color = "[Country.GetMapColor]"
                                            mirror = horizontal 
                                            using = frame_small_mask
                                            alpha = 1.0
                                            
                                            modify_texture = {
                                                blend_mode = add
                                            }
                                        }
                                    }
                                }
                               flowcontainer = {
                                    textbox = {
                                        raw_text = "[Country.GetFlagTextIcon]"
                                        autoresize = yes
                                        parentanchor = vcenter
                                        align = nobaseline
                                        fontsize = 30
                                        margin_left = 10
                                        tooltip = "[Country.GetNameNoFlag]"	
                                    }
                                }
                            }
                        }
                    }
                    
                    widget = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = expanding
                    }
                }
                vbox = {
                    visible = "[GetVariableSystem.Exists('statistics_army_power_projection')]"
                    layoutpolicy_horizontal = expanding
                    layoutpolicy_vertical = expanding
                    margin = { 5 0 }
                    background = {
                        texture = "gfx\interface\illustrations\top_illus\top_illu_army.dds"

                        modify_texture = {
                            texture = "gfx/interface/backgrounds/default_bg_shading.dds"
                            spriteType = Corneredstretched
                            spriteborder = { 0 0 }
                            blend_mode = overlay
                        }
                        modify_texture = {
                            using = texture_velvet
                        }
                    }

                    dynamicgridbox = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = preferred
                        datamodel = "[GetGlobalList('army_power_projection_ranking_global_list')]"
                        ignoreinvisible = yes
                        spacing = 15
                        item = {
                            flowcontainer = {
                                spacing = 10
                                margin_top = 13
                                vertical = yes
                                datacontext = "[Scope.GetCountry]"
                                widget = {
                                    textbox = {
                                        position = { 99 20 }
                                        size = { 3000 28 }
                                        fontsize = 17
                                        parentanchor = vcenter
                                        align = nobaseline|right
                                        max_width = "[FixedPointToFloat(Country.MakeScope.Var('army_power_projection_var').GetValue)]"
                                        
                                        raw_text = "[Country.MakeScope.Var('army_power_projection_value_tt').GetValue)|v0]   "
                                        background = {
                                            texture = "gfx/interface/backgrounds/fancy_pattern_2.dds"
                                            color = "[Country.GetMapColor]"
                                            mirror = horizontal 
                                            using = frame_small_mask
                                            alpha = 1.0
                                            
                                            modify_texture = {
                                                blend_mode = add
                                            }
                                        }
                                    }
                                }
                               flowcontainer = {
                                    textbox = {
                                        raw_text = "[Country.GetFlagTextIcon]"
                                        autoresize = yes
                                        parentanchor = vcenter
                                        align = nobaseline
                                        fontsize = 30
                                        margin_left = 10
                                        tooltip = "[Country.GetNameNoFlag]"	
                                    }
                                }
                            }
                        }
                    }
                    
                    widget = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = expanding
                    }
                }
                vbox = {
                    visible = "[GetVariableSystem.Exists('statistics_navy_power_projection')]"
                    layoutpolicy_horizontal = expanding
                    layoutpolicy_vertical = expanding
                    margin = { 5 0 }
                    background = {
                        texture = "gfx\interface\illustrations\top_illus\top_illu_navy.dds"

                        modify_texture = {
                            texture = "gfx/interface/backgrounds/default_bg_shading.dds"
                            spriteType = Corneredstretched
                            spriteborder = { 0 0 }
                            blend_mode = overlay
                        }
                        modify_texture = {
                            using = texture_velvet
                        }
                    }

                    dynamicgridbox = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = preferred
                        datamodel = "[GetGlobalList('navy_power_projection_ranking_global_list')]"
                        ignoreinvisible = yes
                        spacing = 15
                        item = {
                            flowcontainer = {
                                spacing = 10
                                margin_top = 13
                                vertical = yes
                                datacontext = "[Scope.GetCountry]"
                                widget = {
                                    textbox = {
                                        position = { 99 20 }
                                        size = { 3000 28 }
                                        fontsize = 17
                                        parentanchor = vcenter
                                        align = nobaseline|right
                                        max_width = "[FixedPointToFloat(Country.MakeScope.Var('navy_power_projection_var').GetValue)]"
                                        
                                        raw_text = "[Country.MakeScope.Var('navy_power_projection_value_tt').GetValue)|v0]   "
                                        background = {
                                            texture = "gfx/interface/backgrounds/fancy_pattern_2.dds"
                                            color = "[Country.GetMapColor]"
                                            mirror = horizontal 
                                            using = frame_small_mask
                                            alpha = 1.0
                                            
                                            modify_texture = {
                                                blend_mode = add
                                            }
                                        }
                                    }
                                }
                               flowcontainer = {
                                    textbox = {
                                        raw_text = "[Country.GetFlagTextIcon]"
                                        autoresize = yes
                                        parentanchor = vcenter
                                        align = nobaseline
                                        fontsize = 30
                                        margin_left = 10
                                        tooltip = "[Country.GetNameNoFlag]"	
                                    }
                                }
                            }
                        }
                    }
                    
                    widget = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = expanding
                    }
                }
                vbox = {
                    visible = "[GetVariableSystem.Exists('statistics_military_expenses')]"
                    layoutpolicy_horizontal = expanding
                    layoutpolicy_vertical = expanding
                    margin = { 5 0 }
                    background = {
                        texture = "gfx\interface\illustrations\top_illus\unused\top_illu_fronts.dds"

                        modify_texture = {
                            texture = "gfx/interface/backgrounds/default_bg_shading.dds"
                            spriteType = Corneredstretched
                            spriteborder = { 0 0 }
                            blend_mode = overlay
                        }
                        modify_texture = {
                            using = texture_velvet
                        }
                    }

                    dynamicgridbox = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = preferred
                        datamodel = "[GetGlobalList('military_expenses_ranking_global_list')]"
                        ignoreinvisible = yes
                        spacing = 15
                        item = {
                            flowcontainer = {
                                spacing = 10
                                margin_top = 13
                                vertical = yes
                                datacontext = "[Scope.GetCountry]"
                                widget = {
                                    textbox = {
                                        position = { 99 20 }
                                        size = { 3000 28 }
                                        fontsize = 17
                                        parentanchor = vcenter
                                        align = nobaseline|right
                                        max_width = "[FixedPointToFloat(Country.MakeScope.Var('military_expenses_var').GetValue)]"
                                        
                                        raw_text = "[Country.MakeScope.Var('military_expenses_value_tt').GetValue)|vD]   "
                                        background = {
                                            texture = "gfx/interface/backgrounds/fancy_pattern_2.dds"
                                            color = "[Country.GetMapColor]"
                                            mirror = horizontal 
                                            using = frame_small_mask
                                            alpha = 1.0
                                            
                                            modify_texture = {
                                                blend_mode = add
                                            }
                                        }
                                    }
                                }
                               flowcontainer = {
                                    textbox = {
                                        raw_text = "[Country.GetFlagTextIcon]"
                                        autoresize = yes
                                        parentanchor = vcenter
                                        align = nobaseline
                                        fontsize = 30
                                        margin_left = 10
                                        tooltip = "[Country.GetNameNoFlag]"	
                                    }
                                }
                            }
                        }
                    }
                    
                    widget = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = expanding
                    }
                }
                vbox = {
                    visible = "[GetVariableSystem.Exists('statistics_military_expenses_share')]"
                    layoutpolicy_horizontal = expanding
                    layoutpolicy_vertical = expanding
                    margin = { 5 0 }
                    background = {
                        texture = "gfx\interface\illustrations\top_illus\unused\top_illu_fronts.dds"

                        modify_texture = {
                            texture = "gfx/interface/backgrounds/default_bg_shading.dds"
                            spriteType = Corneredstretched
                            spriteborder = { 0 0 }
                            blend_mode = overlay
                        }
                        modify_texture = {
                            using = texture_velvet
                        }
                    }

                    dynamicgridbox = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = preferred
                        datamodel = "[GetGlobalList('military_expenses_share_ranking_global_list')]"
                        ignoreinvisible = yes
                        spacing = 15
                        item = {
                            flowcontainer = {
                                spacing = 10
                                margin_top = 13
                                vertical = yes
                                datacontext = "[Scope.GetCountry]"
                                widget = {
                                    textbox = {
                                        position = { 99 20 }
                                        size = { 3000 28 }
                                        fontsize = 17
                                        parentanchor = vcenter
                                        align = nobaseline|right
                                        max_width = "[FixedPointToFloat(Country.MakeScope.Var('military_expenses_share_var').GetValue)]"
                                        
                                        raw_text = "[Country.MakeScope.Var('military_expenses_share_value_tt').GetValue)|v%]   "
                                        background = {
                                            texture = "gfx/interface/backgrounds/fancy_pattern_2.dds"
                                            color = "[Country.GetMapColor]"
                                            mirror = horizontal 
                                            using = frame_small_mask
                                            alpha = 1.0
                                            
                                            modify_texture = {
                                                blend_mode = add
                                            }
                                        }
                                    }
                                }
                               flowcontainer = {
                                    textbox = {
                                        raw_text = "[Country.GetFlagTextIcon]"
                                        autoresize = yes
                                        parentanchor = vcenter
                                        align = nobaseline
                                        fontsize = 30
                                        margin_left = 10
                                        tooltip = "[Country.GetNameNoFlag]"	
                                    }
                                }
                            }
                        }
                    }
                    
                    widget = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = expanding
                    }
                }
                vbox = {
                    visible = "[GetVariableSystem.Exists('statistics_techs_researched')]"
                    layoutpolicy_horizontal = expanding
                    layoutpolicy_vertical = expanding
                    margin = { 5 0 }
                    background = {
                        texture = "gfx\interface\illustrations\top_illus\top_illu_diplomacy.dds"

                        modify_texture = {
                            texture = "gfx/interface/backgrounds/default_bg_shading.dds"
                            spriteType = Corneredstretched
                            spriteborder = { 0 0 }
                            blend_mode = overlay
                        }
                        modify_texture = {
                            using = texture_velvet
                        }
                    }

                    dynamicgridbox = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = preferred
                        datamodel = "[GetGlobalList('techs_researched_ranking_global_list')]"
                        ignoreinvisible = yes
                        spacing = 15
                        item = {
                            flowcontainer = {
                                spacing = 10
                                margin_top = 13
                                vertical = yes
                                datacontext = "[Scope.GetCountry]"
                                widget = {
                                    textbox = {
                                        position = { 99 20 }
                                        size = { 3000 28 }
                                        fontsize = 17
                                        parentanchor = vcenter
                                        align = nobaseline|right
                                        max_width = "[FixedPointToFloat(Country.MakeScope.Var('techs_researched_var').GetValue)]"
                                        
                                        raw_text = "[Country.MakeScope.Var('techs_researched_value_tt').GetValue)|v0]   "
                                        background = {
                                            texture = "gfx/interface/backgrounds/fancy_pattern_2.dds"
                                            color = "[Country.GetMapColor]"
                                            mirror = horizontal 
                                            using = frame_small_mask
                                            alpha = 1.0
                                            
                                            modify_texture = {
                                                blend_mode = add
                                            }
                                        }
                                    }
                                }
                               flowcontainer = {
                                    textbox = {
                                        raw_text = "[Country.GetFlagTextIcon]"
                                        autoresize = yes
                                        parentanchor = vcenter
                                        align = nobaseline
                                        fontsize = 30
                                        margin_left = 10
                                        tooltip = "[Country.GetNameNoFlag]"	
                                    }
                                }
                            }
                        }
                    }
                    
                    widget = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = expanding
                    }
                }
                vbox = {
                    visible = "[GetVariableSystem.Exists('statistics_num_active_interests')]"
                    layoutpolicy_horizontal = expanding
                    layoutpolicy_vertical = expanding
                    margin = { 5 0 }
                    background = {
                        texture = "gfx\interface\illustrations\top_illus\top_illu_lobby_pro.dds"

                        modify_texture = {
                            texture = "gfx/interface/backgrounds/default_bg_shading.dds"
                            spriteType = Corneredstretched
                            spriteborder = { 0 0 }
                            blend_mode = overlay
                        }
                        modify_texture = {
                            using = texture_velvet
                        }
                    }

                    dynamicgridbox = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = preferred
                        datamodel = "[GetGlobalList('num_active_interests_ranking_global_list')]"
                        ignoreinvisible = yes
                        spacing = 15
                        item = {
                            flowcontainer = {
                                spacing = 10
                                margin_top = 13
                                vertical = yes
                                datacontext = "[Scope.GetCountry]"
                                widget = {
                                    textbox = {
                                        position = { 99 20 }
                                        size = { 3000 28 }
                                        fontsize = 17
                                        parentanchor = vcenter
                                        align = nobaseline|right
                                        max_width = "[FixedPointToFloat(Country.MakeScope.Var('num_active_interests_var').GetValue)]"
                                        
                                        raw_text = "[Country.MakeScope.Var('num_active_interests_value_tt').GetValue)|v0]   "
                                        background = {
                                            texture = "gfx/interface/backgrounds/fancy_pattern_2.dds"
                                            color = "[Country.GetMapColor]"
                                            mirror = horizontal 
                                            using = frame_small_mask
                                            alpha = 1.0
                                            
                                            modify_texture = {
                                                blend_mode = add
                                            }
                                        }
                                    }
                                }
                               flowcontainer = {
                                    textbox = {
                                        raw_text = "[Country.GetFlagTextIcon]"
                                        autoresize = yes
                                        parentanchor = vcenter
                                        align = nobaseline
                                        fontsize = 30
                                        margin_left = 10
                                        tooltip = "[Country.GetNameNoFlag]"	
                                    }
                                }
                            }
                        }
                    }
                    
                    widget = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = expanding
                    }
                }
                vbox = {
                    visible = "[GetVariableSystem.Exists('statistics_expenses')]"
                    layoutpolicy_horizontal = expanding
                    layoutpolicy_vertical = expanding
                    margin = { 5 0 }
                    background = {
                        texture = "gfx\interface\illustrations\top_illus\top_illu_budget.dds"

                        modify_texture = {
                            texture = "gfx/interface/backgrounds/default_bg_shading.dds"
                            spriteType = Corneredstretched
                            spriteborder = { 0 0 }
                            blend_mode = overlay
                        }
                        modify_texture = {
                            using = texture_velvet
                        }
                    }

                    dynamicgridbox = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = preferred
                        datamodel = "[GetGlobalList('expenses_ranking_global_list')]"
                        ignoreinvisible = yes
                        spacing = 15
                        item = {
                            flowcontainer = {
                                spacing = 10
                                margin_top = 13
                                vertical = yes
                                datacontext = "[Scope.GetCountry]"
                                widget = {
                                    textbox = {
                                        position = { 99 20 }
                                        size = { 3000 28 }
                                        fontsize = 17
                                        parentanchor = vcenter
                                        align = nobaseline|right
                                        max_width = "[FixedPointToFloat(Country.MakeScope.Var('expenses_var').GetValue)]"
                                        
                                        raw_text = "[Country.MakeScope.Var('expenses_value_tt').GetValue)|vD]   "
                                        background = {
                                            texture = "gfx/interface/backgrounds/fancy_pattern_2.dds"
                                            color = "[Country.GetMapColor]"
                                            mirror = horizontal 
                                            using = frame_small_mask
                                            alpha = 1.0
                                            
                                            modify_texture = {
                                                blend_mode = add
                                            }
                                        }
                                    }
                                }
                               flowcontainer = {
                                    textbox = {
                                        raw_text = "[Country.GetFlagTextIcon]"
                                        autoresize = yes
                                        parentanchor = vcenter
                                        align = nobaseline
                                        fontsize = 30
                                        margin_left = 10
                                        tooltip = "[Country.GetNameNoFlag]"	
                                    }
                                }
                            }
                        }
                    }
                    
                    widget = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = expanding
                    }
                }
                vbox = {
                    visible = "[GetVariableSystem.Exists('statistics_income')]"
                    layoutpolicy_horizontal = expanding
                    layoutpolicy_vertical = expanding
                    margin = { 5 0 }
                    background = {
                        texture = "gfx\interface\illustrations\top_illus\top_illu_budget.dds"

                        modify_texture = {
                            texture = "gfx/interface/backgrounds/default_bg_shading.dds"
                            spriteType = Corneredstretched
                            spriteborder = { 0 0 }
                            blend_mode = overlay
                        }
                        modify_texture = {
                            using = texture_velvet
                        }
                    }

                    dynamicgridbox = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = preferred
                        datamodel = "[GetGlobalList('income_ranking_global_list')]"
                        ignoreinvisible = yes
                        spacing = 15
                        item = {
                            flowcontainer = {
                                spacing = 10
                                margin_top = 13
                                vertical = yes
                                datacontext = "[Scope.GetCountry]"
                                widget = {
                                    textbox = {
                                        position = { 99 20 }
                                        size = { 3000 28 }
                                        fontsize = 17
                                        parentanchor = vcenter
                                        align = nobaseline|right
                                        max_width = "[FixedPointToFloat(Country.MakeScope.Var('income_var').GetValue)]"
                                        
                                        raw_text = "[Country.MakeScope.Var('income_value_tt').GetValue)|vD]   "
                                        background = {
                                            texture = "gfx/interface/backgrounds/fancy_pattern_2.dds"
                                            color = "[Country.GetMapColor]"
                                            mirror = horizontal 
                                            using = frame_small_mask
                                            alpha = 1.0
                                            
                                            modify_texture = {
                                                blend_mode = add
                                            }
                                        }
                                    }
                                }
                               flowcontainer = {
                                    textbox = {
                                        raw_text = "[Country.GetFlagTextIcon]"
                                        autoresize = yes
                                        parentanchor = vcenter
                                        align = nobaseline
                                        fontsize = 30
                                        margin_left = 10
                                        tooltip = "[Country.GetNameNoFlag]"	
                                    }
                                }
                            }
                        }
                    }
                    
                    widget = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = expanding
                    }
                }
                vbox = {
                    visible = "[GetVariableSystem.Exists('statistics_investment_pool')]"
                    layoutpolicy_horizontal = expanding
                    layoutpolicy_vertical = expanding
                    margin = { 5 0 }
                    background = {
                        texture = "gfx\interface\illustrations\top_illus\top_illu_budget.dds"

                        modify_texture = {
                            texture = "gfx/interface/backgrounds/default_bg_shading.dds"
                            spriteType = Corneredstretched
                            spriteborder = { 0 0 }
                            blend_mode = overlay
                        }
                        modify_texture = {
                            using = texture_velvet
                        }
                    }

                    dynamicgridbox = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = preferred
                        datamodel = "[GetGlobalList('investment_pool_ranking_global_list')]"
                        ignoreinvisible = yes
                        spacing = 15
                        item = {
                            flowcontainer = {
                                spacing = 10
                                margin_top = 13
                                vertical = yes
                                datacontext = "[Scope.GetCountry]"
                                widget = {
                                    textbox = {
                                        position = { 99 20 }
                                        size = { 3000 28 }
                                        fontsize = 17
                                        parentanchor = vcenter
                                        align = nobaseline|right
                                        max_width = "[FixedPointToFloat(Country.MakeScope.Var('investment_pool_var').GetValue)]"
                                        
                                        raw_text = "[Country.MakeScope.Var('investment_pool_value_tt').GetValue)|vD]   "
                                        background = {
                                            texture = "gfx/interface/backgrounds/fancy_pattern_2.dds"
                                            color = "[Country.GetMapColor]"
                                            mirror = horizontal 
                                            using = frame_small_mask
                                            alpha = 1.0
                                            
                                            modify_texture = {
                                                blend_mode = add
                                            }
                                        }
                                    }
                                }
                               flowcontainer = {
                                    textbox = {
                                        raw_text = "[Country.GetFlagTextIcon]"
                                        autoresize = yes
                                        parentanchor = vcenter
                                        align = nobaseline
                                        fontsize = 30
                                        margin_left = 10
                                        tooltip = "[Country.GetNameNoFlag]"	
                                    }
                                }
                            }
                        }
                    }
                    
                    widget = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = expanding
                    }
                }
                vbox = {
                    visible = "[GetVariableSystem.Exists('statistics_investment_pool_income')]"
                    layoutpolicy_horizontal = expanding
                    layoutpolicy_vertical = expanding
                    margin = { 5 0 }
                    background = {
                        texture = "gfx\interface\illustrations\top_illus\top_illu_budget.dds"

                        modify_texture = {
                            texture = "gfx/interface/backgrounds/default_bg_shading.dds"
                            spriteType = Corneredstretched
                            spriteborder = { 0 0 }
                            blend_mode = overlay
                        }
                        modify_texture = {
                            using = texture_velvet
                        }
                    }

                    dynamicgridbox = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = preferred
                        datamodel = "[GetGlobalList('investment_pool_income_ranking_global_list')]"
                        ignoreinvisible = yes
                        spacing = 15
                        item = {
                            flowcontainer = {
                                spacing = 10
                                margin_top = 13
                                vertical = yes
                                datacontext = "[Scope.GetCountry]"
                                widget = {
                                    textbox = {
                                        position = { 99 20 }
                                        size = { 3000 28 }
                                        fontsize = 17
                                        parentanchor = vcenter
                                        align = nobaseline|right
                                        max_width = "[FixedPointToFloat(Country.MakeScope.Var('investment_pool_income_var').GetValue)]"
                                        
                                        raw_text = "[Country.MakeScope.Var('investment_pool_income_value_tt').GetValue)|vD]   "
                                        background = {
                                            texture = "gfx/interface/backgrounds/fancy_pattern_2.dds"
                                            color = "[Country.GetMapColor]"
                                            mirror = horizontal 
                                            using = frame_small_mask
                                            alpha = 1.0
                                            
                                            modify_texture = {
                                                blend_mode = add
                                            }
                                        }
                                    }
                                }
                               flowcontainer = {
                                    textbox = {
                                        raw_text = "[Country.GetFlagTextIcon]"
                                        autoresize = yes
                                        parentanchor = vcenter
                                        align = nobaseline
                                        fontsize = 30
                                        margin_left = 10
                                        tooltip = "[Country.GetNameNoFlag]"	
                                    }
                                }
                            }
                        }
                    }
                    
                    widget = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = expanding
                    }
                }
                vbox = {
                    visible = "[GetVariableSystem.Exists('statistics_gold_reserves')]"
                    layoutpolicy_horizontal = expanding
                    layoutpolicy_vertical = expanding
                    margin = { 5 0 }
                    background = {
                        texture = "gfx\interface\illustrations\top_illus\top_illu_budget.dds"

                        modify_texture = {
                            texture = "gfx/interface/backgrounds/default_bg_shading.dds"
                            spriteType = Corneredstretched
                            spriteborder = { 0 0 }
                            blend_mode = overlay
                        }
                        modify_texture = {
                            using = texture_velvet
                        }
                    }

                    dynamicgridbox = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = preferred
                        datamodel = "[GetGlobalList('gold_reserves_ranking_global_list')]"
                        ignoreinvisible = yes
                        spacing = 15
                        item = {
                            flowcontainer = {
                                spacing = 10
                                margin_top = 13
                                vertical = yes
                                datacontext = "[Scope.GetCountry]"
                                widget = {
                                    textbox = {
                                        position = { 99 20 }
                                        size = { 3000 28 }
                                        fontsize = 17
                                        parentanchor = vcenter
                                        align = nobaseline|right
                                        max_width = "[FixedPointToFloat(Country.MakeScope.Var('gold_reserves_var').GetValue)]"
                                        
                                        raw_text = "[Country.MakeScope.Var('gold_reserves_value_tt').GetValue)|vD]   "
                                        background = {
                                            texture = "gfx/interface/backgrounds/fancy_pattern_2.dds"
                                            color = "[Country.GetMapColor]"
                                            mirror = horizontal 
                                            using = frame_small_mask
                                            alpha = 1.0
                                            
                                            modify_texture = {
                                                blend_mode = add
                                            }
                                        }
                                    }
                                }
                               flowcontainer = {
                                    textbox = {
                                        raw_text = "[Country.GetFlagTextIcon]"
                                        autoresize = yes
                                        parentanchor = vcenter
                                        align = nobaseline
                                        fontsize = 30
                                        margin_left = 10
                                        tooltip = "[Country.GetNameNoFlag]"	
                                    }
                                }
                            }
                        }
                    }
                    
                    widget = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = expanding
                    }
                }
                vbox = {
                    visible = "[GetVariableSystem.Exists('statistics_gold_reserves_limit')]"
                    layoutpolicy_horizontal = expanding
                    layoutpolicy_vertical = expanding
                    margin = { 5 0 }
                    background = {
                        texture = "gfx\interface\illustrations\top_illus\top_illu_budget.dds"

                        modify_texture = {
                            texture = "gfx/interface/backgrounds/default_bg_shading.dds"
                            spriteType = Corneredstretched
                            spriteborder = { 0 0 }
                            blend_mode = overlay
                        }
                        modify_texture = {
                            using = texture_velvet
                        }
                    }

                    dynamicgridbox = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = preferred
                        datamodel = "[GetGlobalList('gold_reserves_limit_ranking_global_list')]"
                        ignoreinvisible = yes
                        spacing = 15
                        item = {
                            flowcontainer = {
                                spacing = 10
                                margin_top = 13
                                vertical = yes
                                datacontext = "[Scope.GetCountry]"
                                widget = {
                                    textbox = {
                                        position = { 99 20 }
                                        size = { 3000 28 }
                                        fontsize = 17
                                        parentanchor = vcenter
                                        align = nobaseline|right
                                        max_width = "[FixedPointToFloat(Country.MakeScope.Var('gold_reserves_limit_var').GetValue)]"
                                        
                                        raw_text = "[Country.MakeScope.Var('gold_reserves_limit_value_tt').GetValue)|vD]   "
                                        background = {
                                            texture = "gfx/interface/backgrounds/fancy_pattern_2.dds"
                                            color = "[Country.GetMapColor]"
                                            mirror = horizontal 
                                            using = frame_small_mask
                                            alpha = 1.0
                                            
                                            modify_texture = {
                                                blend_mode = add
                                            }
                                        }
                                    }
                                }
                               flowcontainer = {
                                    textbox = {
                                        raw_text = "[Country.GetFlagTextIcon]"
                                        autoresize = yes
                                        parentanchor = vcenter
                                        align = nobaseline
                                        fontsize = 30
                                        margin_left = 10
                                        tooltip = "[Country.GetNameNoFlag]"	
                                    }
                                }
                            }
                        }
                    }
                    
                    widget = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = expanding
                    }
                }
                vbox = {
                    visible = "[GetVariableSystem.Exists('statistics_credit')]"
                    layoutpolicy_horizontal = expanding
                    layoutpolicy_vertical = expanding
                    margin = { 5 0 }
                    background = {
                        texture = "gfx\interface\illustrations\top_illus\top_illu_budget.dds"

                        modify_texture = {
                            texture = "gfx/interface/backgrounds/default_bg_shading.dds"
                            spriteType = Corneredstretched
                            spriteborder = { 0 0 }
                            blend_mode = overlay
                        }
                        modify_texture = {
                            using = texture_velvet
                        }
                    }

                    dynamicgridbox = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = preferred
                        datamodel = "[GetGlobalList('credit_ranking_global_list')]"
                        ignoreinvisible = yes
                        spacing = 15
                        item = {
                            flowcontainer = {
                                spacing = 10
                                margin_top = 13
                                vertical = yes
                                datacontext = "[Scope.GetCountry]"
                                widget = {
                                    textbox = {
                                        position = { 99 20 }
                                        size = { 3000 28 }
                                        fontsize = 17
                                        parentanchor = vcenter
                                        align = nobaseline|right
                                        max_width = "[FixedPointToFloat(Country.MakeScope.Var('credit_var').GetValue)]"
                                        
                                        raw_text = "[Country.MakeScope.Var('credit_value_tt').GetValue)|vD]   "
                                        background = {
                                            texture = "gfx/interface/backgrounds/fancy_pattern_2.dds"
                                            color = "[Country.GetMapColor]"
                                            mirror = horizontal 
                                            using = frame_small_mask
                                            alpha = 1.0
                                            
                                            modify_texture = {
                                                blend_mode = add
                                            }
                                        }
                                    }
                                }
                               flowcontainer = {
                                    textbox = {
                                        raw_text = "[Country.GetFlagTextIcon]"
                                        autoresize = yes
                                        parentanchor = vcenter
                                        align = nobaseline
                                        fontsize = 30
                                        margin_left = 10
                                        tooltip = "[Country.GetNameNoFlag]"	
                                    }
                                }
                            }
                        }
                    }
                    
                    widget = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = expanding
                    }
                }
                vbox = {
                    visible = "[GetVariableSystem.Exists('statistics_debt')]"
                    layoutpolicy_horizontal = expanding
                    layoutpolicy_vertical = expanding
                    margin = { 5 0 }
                    background = {
                        texture = "gfx\interface\illustrations\top_illus\top_illu_budget.dds"

                        modify_texture = {
                            texture = "gfx/interface/backgrounds/default_bg_shading.dds"
                            spriteType = Corneredstretched
                            spriteborder = { 0 0 }
                            blend_mode = overlay
                        }
                        modify_texture = {
                            using = texture_velvet
                        }
                    }

                    dynamicgridbox = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = preferred
                        datamodel = "[GetGlobalList('debt_ranking_global_list')]"
                        ignoreinvisible = yes
                        spacing = 15
                        item = {
                            flowcontainer = {
                                spacing = 10
                                margin_top = 13
                                vertical = yes
                                datacontext = "[Scope.GetCountry]"
                                widget = {
                                    textbox = {
                                        position = { 99 20 }
                                        size = { 3000 28 }
                                        fontsize = 17
                                        parentanchor = vcenter
                                        align = nobaseline|right
                                        max_width = "[FixedPointToFloat(Country.MakeScope.Var('debt_var').GetValue)]"
                                        
                                        raw_text = "[Country.MakeScope.Var('debt_value_tt').GetValue)|vD]   "
                                        background = {
                                            texture = "gfx/interface/backgrounds/fancy_pattern_2.dds"
                                            color = "[Country.GetMapColor]"
                                            mirror = horizontal 
                                            using = frame_small_mask
                                            alpha = 1.0
                                            
                                            modify_texture = {
                                                blend_mode = add
                                            }
                                        }
                                    }
                                }
                               flowcontainer = {
                                    textbox = {
                                        raw_text = "[Country.GetFlagTextIcon]"
                                        autoresize = yes
                                        parentanchor = vcenter
                                        align = nobaseline
                                        fontsize = 30
                                        margin_left = 10
                                        tooltip = "[Country.GetNameNoFlag]"	
                                    }
                                }
                            }
                        }
                    }
                    
                    widget = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = expanding
                    }
                }
                vbox = {
                    visible = "[GetVariableSystem.Exists('statistics_building_levels')]"
                    layoutpolicy_horizontal = expanding
                    layoutpolicy_vertical = expanding
                    margin = { 5 0 }
                    background = {
                        texture = "gfx\interface\illustrations\top_illus\top_illu_companies.dds"

                        modify_texture = {
                            texture = "gfx/interface/backgrounds/default_bg_shading.dds"
                            spriteType = Corneredstretched
                            spriteborder = { 0 0 }
                            blend_mode = overlay
                        }
                        modify_texture = {
                            using = texture_velvet
                        }
                    }

                    dynamicgridbox = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = preferred
                        datamodel = "[GetGlobalList('building_levels_ranking_global_list')]"
                        ignoreinvisible = yes
                        spacing = 15
                        item = {
                            flowcontainer = {
                                spacing = 10
                                margin_top = 13
                                vertical = yes
                                datacontext = "[Scope.GetCountry]"
                                widget = {
                                    textbox = {
                                        position = { 99 20 }
                                        size = { 3000 28 }
                                        fontsize = 17
                                        parentanchor = vcenter
                                        align = nobaseline|right
                                        max_width = "[FixedPointToFloat(Country.MakeScope.Var('building_levels_var').GetValue)]"
                                        
                                        raw_text = "[Country.MakeScope.Var('building_levels_value_tt').GetValue)|v0]   "
                                        background = {
                                            texture = "gfx/interface/backgrounds/fancy_pattern_2.dds"
                                            color = "[Country.GetMapColor]"
                                            mirror = horizontal 
                                            using = frame_small_mask
                                            alpha = 1.0
                                            
                                            modify_texture = {
                                                blend_mode = add
                                            }
                                        }
                                    }
                                }
                               flowcontainer = {
                                    textbox = {
                                        raw_text = "[Country.GetFlagTextIcon]"
                                        autoresize = yes
                                        parentanchor = vcenter
                                        align = nobaseline
                                        fontsize = 30
                                        margin_left = 10
                                        tooltip = "[Country.GetNameNoFlag]"	
                                    }
                                }
                            }
                        }
                    }
                    
                    widget = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = expanding
                    }
                }
                vbox = {
                    visible = "[GetVariableSystem.Exists('statistics_num_convoys')]"
                    layoutpolicy_horizontal = expanding
                    layoutpolicy_vertical = expanding
                    margin = { 5 0 }
                    background = {
                        texture = "gfx\interface\illustrations\top_illus\top_illu_companies.dds"

                        modify_texture = {
                            texture = "gfx/interface/backgrounds/default_bg_shading.dds"
                            spriteType = Corneredstretched
                            spriteborder = { 0 0 }
                            blend_mode = overlay
                        }
                        modify_texture = {
                            using = texture_velvet
                        }
                    }

                    dynamicgridbox = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = preferred
                        datamodel = "[GetGlobalList('num_convoys_available_ranking_global_list')]"
                        ignoreinvisible = yes
                        spacing = 15
                        item = {
                            flowcontainer = {
                                spacing = 10
                                margin_top = 13
                                vertical = yes
                                datacontext = "[Scope.GetCountry]"
                                widget = {
                                    textbox = {
                                        position = { 99 20 }
                                        size = { 3000 28 }
                                        fontsize = 17
                                        parentanchor = vcenter
                                        align = nobaseline|right
                                        max_width = "[FixedPointToFloat(Country.MakeScope.Var('num_convoys_available_var').GetValue)]"
                                        
                                        raw_text = "[Country.MakeScope.Var('num_convoys_available_value_tt').GetValue)|v0]   "
                                        background = {
                                            texture = "gfx/interface/backgrounds/fancy_pattern_2.dds"
                                            color = "[Country.GetMapColor]"
                                            mirror = horizontal 
                                            using = frame_small_mask
                                            alpha = 1.0
                                            
                                            modify_texture = {
                                                blend_mode = add
                                            }
                                        }
                                    }
                                }
                               flowcontainer = {
                                    textbox = {
                                        raw_text = "[Country.GetFlagTextIcon]"
                                        autoresize = yes
                                        parentanchor = vcenter
                                        align = nobaseline
                                        fontsize = 30
                                        margin_left = 10
                                        tooltip = "[Country.GetNameNoFlag]"	
                                    }
                                }
                            }
                        }
                    }
                    
                    widget = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = expanding
                    }
                }
            }
        }
	}
}